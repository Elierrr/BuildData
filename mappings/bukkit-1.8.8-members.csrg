AttributeInstance a (D)V setValue
AttributeInstance a ()LIAttribute; getAttribute
AttributeInstance e ()D getValue
AttributeMapServer b ()Ljava/util/Set; getAttributes
AxisAlignedBB b (DDD)LAxisAlignedBB; grow
AxisAlignedBB d (DDD)LAxisAlignedBB; shrink
BaseBlockPosition b ZERO
BaseBlockPosition n ()I getX
BaseBlockPosition o ()I getY
BaseBlockPosition p ()I getZ
BiomeBase$1 a switchMap
BiomeBase aa MESA
BiomeBase ab MESA_PLATEAU_F
BiomeBase ac MESA_PLATEAU
BiomeBase aE biomes
BiomeBase A FROZEN_RIVER
BiomeBase a (ILBiomeBase;)LBiomeBase; getBiome
BiomeBase a (LEnumCreatureType;)Ljava/util/List; getMobs
BiomeBase ap temperature
BiomeBase aq humidity
BiomeBase az id
BiomeBase B ICE_PLAINS
BiomeBase C ICE_MOUNTAINS
BiomeBase D MUSHROOM_ISLAND
BiomeBase e (I)LBiomeBase; getBiome
BiomeBase E MUSHROOM_SHORE
BiomeBase$EnumTemperature a OCEAN
BiomeBase$EnumTemperature b COLD
BiomeBase$EnumTemperature c MEDIUM
BiomeBase$EnumTemperature d WARM
BiomeBase F BEACH
BiomeBase G DESERT_HILLS
BiomeBase H FOREST_HILLS
BiomeBase I TAIGA_HILLS
BiomeBase J SMALL_MOUNTAINS
BiomeBase K JUNGLE
BiomeBase L JUNGLE_HILLS
BiomeBase M JUNGLE_EDGE
BiomeBase N DEEP_OCEAN
BiomeBase n ()[LBiomeBase; getBiomes
BiomeBase O STONE_BEACH
BiomeBase P COLD_BEACH
BiomeBase p OCEAN
BiomeBase Q BIRCH_FOREST
BiomeBase q PLAINS
BiomeBase R BIRCH_FOREST_HILLS
BiomeBase r DESERT
BiomeBase s EXTREME_HILLS
BiomeBase S ROOFED_FOREST
BiomeBase T COLD_TAIGA
BiomeBase t FOREST
BiomeBase U COLD_TAIGA_HILLS
BiomeBase u TAIGA
BiomeBase V MEGA_TAIGA
BiomeBase v SWAMPLAND
BiomeBase W MEGA_TAIGA_HILLS
BiomeBase w RIVER
BiomeBase X EXTREME_HILLS_PLUS
BiomeBase x HELL
BiomeBase Y SAVANNA
BiomeBase y SKY
BiomeBase z FROZEN_OCEAN
BiomeBase Z SAVANNA_PLATEAU
Block a (I)LIBlockData; fromLegacyData
Block a (ILjava/util/Random;)I getDropCount
Block A isTileEntity
Block a (LBlock;)I getId
Block a (LEntityHuman;LWorld;LBlockPosition;)F getDamage
Block a (LIBlockAccess;LBlockPosition;)V updateShape
Block a (LIBlockData;)I getDropData
Block a (LIBlockData;LIBlockAccess;LBlockPosition;)LIBlockData; updateState
Block a (LIBlockData;Ljava/util/Random;I)LItem; getDropType
Block a (LItem;)LBlock; asBlock
Block a (LWorld;LBlockPosition;LEntity;F)V fallOn
Block a (LWorld;LBlockPosition;LEntityHuman;)V attack
Block a (LWorld;LBlockPosition;LEnumDirection;FFFILEntityLiving;)LIBlockData; getPlacedState
Block a (LWorld;LBlockPosition;LEnumDirection;LItemStack;)Z canPlace
Block a (LWorld;LBlockPosition;LExplosion;)V wasExploded
Block a (LWorld;LBlockPosition;LIBlockData;FI)V dropNaturally
Block a (LWorld;LBlockPosition;LIBlockData;LBlock;)V doPhysics
Block a (LWorld;LBlockPosition;LIBlockData;LEntityHuman;LEnumDirection;FFF)Z interact
Block a (LWorld;LBlockPosition;LIBlockData;LEntityLiving;LItemStack;)V postPlace
BlockAnvil a FACING
BlockAnvil b DAMAGE
BlockBanner a FACING
BlockBanner b ROTATION
Block b creativeTab
BlockBed a PART
BlockBed b OCCUPIED
BlockBed$EnumBedPart a HEAD
BlockBed$EnumBedPart b FOOT
Block b (Ljava/lang/String;)LBlock; getByName
Block b (LWorld;LBlockPosition;I)V dropExperience
Block b (LWorld;LBlockPosition;LEnumDirection;)Z canPlace
Block b (LWorld;LBlockPosition;LIBlockData;)V remove
Block B minX
BlockBrewingStand a HAS_BOTTLE
BlockButtonAbstract a FACING
BlockButtonAbstract b POWERED
BlockCactus a AGE
BlockCake a BITES
BlockCarpet a COLOR
BlockCauldron a LEVEL
BlockChest a FACING
Block c (I)LBlock; getById
Block c (LIBlockData;)I toLegacyData
BlockCloth a COLOR
Block c (LWorld;LBlockPosition;LIBlockData;)V onPlace
Block C minY
BlockCobbleWall a UP
BlockCobbleWall b NORTH
BlockCobbleWall$EnumCobbleVariant a NORMAL
BlockCobbleWall$EnumCobbleVariant b MOSSY
BlockCobbleWall N EAST
BlockCobbleWall O SOUTH
BlockCobbleWall P WEST
BlockCobbleWall Q VARIANT
BlockCocoa a AGE
BlockCommand a TRIGGERED
Block c REGISTRY
BlockCrops a AGE
BlockCrops a (LWorld;LBlockPosition;LIBlockData;FI)V dropNaturally
BlockDaylightDetector a POWER
Block d (I)LIBlockData; getByCombinedId
BlockDirectional O FACING
BlockDirt a VARIANT
BlockDirt b SNOWY
BlockDirt$EnumDirtVariant a DIRT
BlockDirt$EnumDirtVariant b COARSE_DIRT
BlockDirt$EnumDirtVariant c PODZOL
BlockDispenser a FACING
BlockDispenser b TRIGGERED
BlockDispenser f (LWorld;LBlockPosition;)V dispense
BlockDispenser N REGISTRY
Block d (LWorld;LBlockPosition;LIBlockData;)V postBreak
Block d (LWorld;LBlockPosition;)Z canPlace
Block D minZ
BlockDoor a FACING
BlockDoor a (LWorld;LBlockPosition;Z)V setDoor
BlockDoor b OPEN
BlockDoor$EnumDoorHalf a UPPER
BlockDoor$EnumDoorHalf b LOWER
BlockDoor$EnumDoorHinge a LEFT
BlockDoor$EnumDoorHinge b RIGHT
BlockDoor N HINGE
BlockDoor O POWERED
BlockDoor P HALF
BlockDoubleStepAbstract b SEAMLESS
BlockDoubleStepAbstract$EnumStoneSlabVariant a STONE
BlockDoubleStepAbstract$EnumStoneSlabVariant b SAND
BlockDoubleStepAbstract$EnumStoneSlabVariant c WOOD
BlockDoubleStepAbstract$EnumStoneSlabVariant d COBBLESTONE
BlockDoubleStepAbstract$EnumStoneSlabVariant e BRICK
BlockDoubleStepAbstract$EnumStoneSlabVariant f SMOOTHBRICK
BlockDoubleStepAbstract$EnumStoneSlabVariant g NETHERBRICK
BlockDoubleStepAbstract$EnumStoneSlabVariant h QUARTZ
BlockDoubleStepAbstract N VARIANT
BlockDoubleStoneStepAbstract b SEAMLESS
BlockDoubleStoneStepAbstract$EnumStoneSlab2Variant a RED_SANDSTONE
BlockDoubleStoneStepAbstract N VARIANT
Block e ()LBlockStateList; getStateList
Block E maxX
BlockEnderChest a FACING
BlockEnderPortalFrame a FACING
BlockEnderPortalFrame b EYE
BlockFalling e (LWorld;LBlockPosition;)Z canFall
BlockFalling N instaFall
BlockFence a NORTH
BlockFence b EAST
BlockFenceGate a OPEN
BlockFenceGate b POWERED
BlockFenceGate N IN_WALL
BlockFence N SOUTH
BlockFence O WEST
BlockFire a AGE
BlockFire b FLIP
BlockFire N ALT
BlockFire O NORTH
BlockFire P EAST
BlockFire Q SOUTH
BlockFire R WEST
BlockFire S UPPER
BlockFire T flameChances
Block f (LIBlockData;)I getCombinedId
Block f ()Ljava/lang/String; getName
BlockFloorSign a ROTATION
BlockFlowerPot a LEGACY_DATA
BlockFlowerPot b CONTENTS
BlockFlowerPot$EnumFlowerPotContents a EMPTY
BlockFlowerPot$EnumFlowerPotContents b POPPY
BlockFlowerPot$EnumFlowerPotContents c BLUE_ORCHID
BlockFlowerPot$EnumFlowerPotContents d ALLIUM
BlockFlowerPot$EnumFlowerPotContents e HOUSTONIA
BlockFlowerPot$EnumFlowerPotContents f RED_TULIP
BlockFlowerPot$EnumFlowerPotContents g ORANGE_TULIP
BlockFlowerPot$EnumFlowerPotContents h WHITE_TULIP
BlockFlowerPot$EnumFlowerPotContents i PINK_TULIP
BlockFlowerPot$EnumFlowerPotContents j OXEYE_DAISY
BlockFlowerPot$EnumFlowerPotContents k DANDELION
BlockFlowerPot$EnumFlowerPotContents l OAK_SAPLING
BlockFlowerPot$EnumFlowerPotContents m SPRUCE_SAPLING
BlockFlowerPot$EnumFlowerPotContents n BIRCH_SAPLING
BlockFlowerPot$EnumFlowerPotContents o JUNGLE_SAPLING
BlockFlowerPot$EnumFlowerPotContents p ACACIA_SAPLING
BlockFlowerPot$EnumFlowerPotContents q DARK_OAK_SAPLING
BlockFlowerPot$EnumFlowerPotContents r MUSHROOM_RED
BlockFlowerPot$EnumFlowerPotContents s MUSHROOM_BROWN
BlockFlowerPot$EnumFlowerPotContents t DEAD_BUSH
BlockFlowerPot$EnumFlowerPotContents u FERN
BlockFlowerPot$EnumFlowerPotContents v CACTUS
BlockFlowers a TYPE
BlockFlowers$EnumFlowerType a YELLOW
BlockFlowers$EnumFlowerType b RED
BlockFlowers$EnumFlowerVarient a DANDELION
BlockFlowers$EnumFlowerVarient b POPPY
BlockFlowers$EnumFlowerVarient c BLUE_ORCHID
BlockFlowers$EnumFlowerVarient d ALLIUM
BlockFlowers$EnumFlowerVarient e HOUSTONIA
BlockFlowers$EnumFlowerVarient f RED_TULIP
BlockFlowers$EnumFlowerVarient g ORANGE_TULIP
BlockFlowers$EnumFlowerVarient h WHITE_TULIP
BlockFlowers$EnumFlowerVarient i PINK_TULIP
BlockFlowers$EnumFlowerVarient j OXEYE_DAISY
BlockFlowing a (LWorld;LBlockPosition;LIBlockData;I)V flow
BlockFluids a (LWorld;LBlockPosition;LIBlockData;LBlock;)V doPhysics
BlockFluids b LEVEL
BlockFluids c (LWorld;LBlockPosition;LIBlockData;)V onPlace
BlockFluids e (LWorld;LBlockPosition;)V fizz
Block F maxY
BlockFurnace a FACING
Block G maxZ
BlockGrass a SNOWY
BlockHopper a FACING
BlockHopper b ENABLED
Block H stepSound
BlockHugeMushroom a VARIANT
BlockHugeMushroom$EnumHugeMushroomVariant a NORTH_WEST
BlockHugeMushroom$EnumHugeMushroomVariant b NORTH
BlockHugeMushroom$EnumHugeMushroomVariant c NORTH_EAST
BlockHugeMushroom$EnumHugeMushroomVariant d WEST
BlockHugeMushroom$EnumHugeMushroomVariant e CENTER
BlockHugeMushroom$EnumHugeMushroomVariant f EAST
BlockHugeMushroom$EnumHugeMushroomVariant g SOUTH_WEST
BlockHugeMushroom$EnumHugeMushroomVariant h SOUTH
BlockHugeMushroom$EnumHugeMushroomVariant i SOUTH_EAST
BlockHugeMushroom$EnumHugeMushroomVariant j STEM
BlockHugeMushroom$EnumHugeMushroomVariant k ALL_INSIDE
BlockHugeMushroom$EnumHugeMushroomVariant l ALL_OUTSIDE
BlockHugeMushroom$EnumHugeMushroomVariant m ALL_STEM
Block i ()Z isPowerSource
Block j (LWorld;LBlockPosition;)I getDropData
Block J material
BlockJukeBox a HAS_RECORD
BlockJukeBox e (LWorld;LBlockPosition;LIBlockData;)V dropRecord
BlockJukeBox$TileEntityRecordPlayer a ()LItemStack; getRecord
BlockJukeBox$TileEntityRecordPlayer a (LItemStack;)V setRecord
BlockJukeBox$TileEntityRecordPlayer a record
BlockLadder a FACING
BlockLeaves1 Q VARIANT
BlockLeaves2 Q VARIANT
BlockLeaves a DECAYABLE
BlockLeaves b CHECK_DECAY
BlockLever a FACING
BlockLever b POWERED
BlockLever$EnumLeverPosition a DOWN_X
BlockLever$EnumLeverPosition b EAST
BlockLever$EnumLeverPosition c WEST
BlockLever$EnumLeverPosition d SOUTH
BlockLever$EnumLeverPosition e NORTH
BlockLever$EnumLeverPosition f UP_Z
BlockLever$EnumLeverPosition g UP_X
BlockLever$EnumLeverPosition h DOWN_Z
Block L frictionFactor
BlockLog1 b VARIANT
BlockLog2 b VARIANT
BlockLogAbstract a AXIS
BlockLogAbstract$EnumLogRotation a X
BlockLogAbstract$EnumLogRotation b Y
BlockLogAbstract$EnumLogRotation c Z
BlockLogAbstract$EnumLogRotation d NONE
BlockLongGrass a TYPE
BlockLongGrass$EnumTallGrassType a DEAD_BUSH
BlockLongGrass$EnumTallGrassType b GRASS
BlockLongGrass$EnumTallGrassType c FERN
Block M blockStateList
BlockMinecartDetector b SHAPE
BlockMinecartDetector N POWERED
BlockMinecartTrackAbstract$EnumTrackPosition a NORTH_SOUTH
BlockMinecartTrackAbstract$EnumTrackPosition b EAST_WEST
BlockMinecartTrackAbstract$EnumTrackPosition c ASCENDING_EAST
BlockMinecartTrackAbstract$EnumTrackPosition d ASCENDING_WEST
BlockMinecartTrackAbstract$EnumTrackPosition e ASCENDING_NORTH
BlockMinecartTrackAbstract$EnumTrackPosition f ASCENDING_SOUTH
BlockMinecartTrackAbstract$EnumTrackPosition g SOUTH_EAST
BlockMinecartTrackAbstract$EnumTrackPosition h SOUTH_WEST
BlockMinecartTrackAbstract$EnumTrackPosition i NORTH_WEST
BlockMinecartTrackAbstract$EnumTrackPosition j NORTH_EAST
BlockMinecartTrack b SHAPE
BlockMonsterEggs a VARIANT
BlockMonsterEggs$EnumMonsterEggVarient a STONE
BlockMonsterEggs$EnumMonsterEggVarient b COBBLESTONE
BlockMonsterEggs$EnumMonsterEggVarient c STONEBRICK
BlockMonsterEggs$EnumMonsterEggVarient d MOSSY_STONEBRICK
BlockMonsterEggs$EnumMonsterEggVarient e CRACKED_STONEBRICK
BlockMonsterEggs$EnumMonsterEggVarient f CHISELED_STONEBRICK
BlockMycel a SNOWY
Block N blockData
BlockNetherWart a AGE
Block O name
Block O ()Z isComplexRedstone
BlockPiston a FACING
BlockPiston b EXTENDED
BlockPistonExtension a FACING
BlockPistonExtension b TYPE
BlockPistonExtension$EnumPistonType a DEFAULT
BlockPistonExtension$EnumPistonType b STICKY
BlockPistonExtension N SHORT
BlockPistonMoving a FACING
BlockPistonMoving b TYPE
BlockPiston N sticky
BlockPlant d (LWorld;LBlockPosition;)Z canPlace
BlockPortal a AXIS
BlockPortal$Shape e ()V createPortal
BlockPortal$Shape f position
BlockPortal$Shape g height
BlockPortal$Shape h width
BlockPosition a (J)LBlockPosition; fromLong
BlockPosition a ()LBlockPosition; up
BlockPosition a (LEnumDirection;I)LBlockPosition; shift
BlockPosition a (LEnumDirection;)LBlockPosition; shift
BlockPosition a ZERO
BlockPosition b (I)LBlockPosition; up
BlockPosition b ()LBlockPosition; down
BlockPosition c (I)LBlockPosition; down
BlockPosition c ()LBlockPosition; north
BlockPosition d (I)LBlockPosition; north
BlockPosition d ()LBlockPosition; south
BlockPosition e (I)LBlockPosition; south
BlockPosition e ()LBlockPosition; west
BlockPosition f (I)LBlockPosition; west
BlockPosition f ()LBlockPosition; east
BlockPosition g (I)LBlockPosition; east
BlockPosition g ()J asLong
BlockPosition$MutableBlockPosition c (III)LBlockPosition$MutableBlockPosition; setValues
BlockPoweredRail b SHAPE
BlockPoweredRail N POWERED
BlockPressurePlateAbstract a (LBlockPosition;)LAxisAlignedBB; getBoundingBox
BlockPressurePlateBinary a POWERED
BlockPressurePlateBinary$EnumMobType a EVERYTHING
BlockPressurePlateBinary$EnumMobType b MOBS
BlockPressurePlateWeighted a POWER
BlockPressurePlateWeighted b weight
BlockPrismarine a VARIANT
BlockPrismarine$EnumPrismarineVariant a ROUGH
BlockPrismarine$EnumPrismarineVariant b BRICKS
BlockPrismarine$EnumPrismarineVariant c DARK
BlockPumpkin a snowGolemPart
BlockPumpkin b snowGolem
BlockPumpkin l ()LShapeDetector; getDetectorSnowGolemPart
BlockPumpkin N ironGolemPart
BlockPumpkin n ()LShapeDetector; getDetectorSnowGolem
BlockPumpkin P ironGolem
BlockPumpkin T ()LShapeDetector; getDetectorIronGolemPart
BlockPumpkin U ()LShapeDetector; getDetectorIronGolem
Block Q ()LIBlockData; getBlockData
BlockQuartz a VARIANT
BlockQuartz$EnumQuartzVariant a DEFAULT
BlockQuartz$EnumQuartzVariant b CHISELED
BlockQuartz$EnumQuartzVariant c LINES_Y
BlockQuartz$EnumQuartzVariant d LINES_X
BlockQuartz$EnumQuartzVariant e LINES_Z
BlockRedSandstone a TYPE
BlockRedSandstone$EnumRedSandstoneVariant a DEFAULT
BlockRedSandstone$EnumRedSandstoneVariant b CHISELED
BlockRedSandstone$EnumRedSandstoneVariant c SMOOTH
BlockRedstoneComparator a POWERED
BlockRedstoneComparator b MODE
BlockRedstoneComparator$EnumComparatorMode a COMPARE
BlockRedstoneComparator$EnumComparatorMode b SUBTRACT
BlockRedstoneTorch N isOn
BlockRedstoneTorch$RedstoneUpdateInfo b time
BlockRedstoneWire a (LWorld;LBlockPosition;I)I getPower
BlockRedstoneWire a NORTH
BlockRedstoneWire b EAST
BlockRedstoneWire$EnumRedstoneWireConnection a UP
BlockRedstoneWire$EnumRedstoneWireConnection b SIDE
BlockRedstoneWire$EnumRedstoneWireConnection c NONE
BlockRedstoneWire N SOUTH
BlockRedstoneWire O WEST
BlockRedstoneWire P POWER
BlockReed a AGE
BlockRepeater a LOCKED
BlockRepeater b DELAY
BlockRotatable N AXIS
Blocks a AIR
Blocks aA IRON_DOOR
Blocks aa TORCH
Blocks ab FIRE
Blocks aB WOODEN_PRESSURE_PLATE
Blocks ac MOB_SPAWNER
Blocks aC REDSTONE_ORE
Blocks aD LIT_REDSTONE_ORE
Blocks ad OAK_STAIRS
Blocks ae CHEST
Blocks aE UNLIT_REDSTONE_TORCH
Blocks aF REDSTONE_TORCH
Blocks af REDSTONE_WIRE
Blocks ag DIAMOND_ORE
Blocks aG STONE_BUTTON
Blocks ah DIAMOND_BLOCK
Blocks aH SNOW_LAYER
Blocks ai CRAFTING_TABLE
Blocks aI ICE
Blocks aJ SNOW
Blocks aj WHEAT
Blocks aK CACTUS
Blocks ak FARMLAND
Blocks aL CLAY
Blocks al FURNACE
Blocks a (Ljava/lang/String;)LBlock; get
Blocks am LIT_FURNACE
Blocks aM REEDS
BlockSand a VARIANT
BlockSand$EnumSandVariant a SAND
BlockSand$EnumSandVariant b RED_SAND
BlockSandStone a TYPE
BlockSandStone$EnumSandstoneVariant a DEFAULT
BlockSandStone$EnumSandstoneVariant b CHISELED
BlockSandStone$EnumSandstoneVariant c SMOOTH
Blocks aN JUKEBOX
Blocks an STANDING_SIGN
Blocks aO FENCE
Blocks ao WOODEN_DOOR
BlockSapling a TYPE
BlockSapling b STAGE
BlockSapling d (LWorld;LBlockPosition;LIBlockData;Ljava/util/Random;)V grow
Blocks ap SPRUCE_DOOR
Blocks aP SPRUCE_FENCE
Blocks aq BIRCH_DOOR
Blocks aQ BIRCH_FENCE
Blocks ar JUNGLE_DOOR
Blocks aR JUNGLE_FENCE
Blocks as ACACIA_DOOR
Blocks A SANDSTONE
Blocks aS DARK_OAK_FENCE
Blocks aT ACACIA_FENCE
Blocks at DARK_OAK_DOOR
Blocks au LADDER
Blocks aU PUMPKIN
Blocks aV NETHERRACK
Blocks av RAIL
Blocks aW SOUL_SAND
Blocks aw STONE_STAIRS
Blocks aX GLOWSTONE
Blocks ax WALL_SIGN
Blocks ay LEVER
Blocks aY PORTAL
Blocks aZ LIT_PUMPKIN
Blocks az STONE_PRESSURE_PLATE
Blocks ba CAKE
Blocks bA NETHER_BRICK_STAIRS
Blocks bB NETHER_WART
Blocks bb UNPOWERED_REPEATER
Blocks bC ENCHANTING_TABLE
Blocks bc POWERED_REPEATER
Blocks bD BREWING_STAND
Blocks bd TRAPDOOR
Blocks bE cauldron
Blocks be MONSTER_EGG
Blocks bF END_PORTAL
Blocks bf STONEBRICK
Blocks bg BROWN_MUSHROOM_BLOCK
Blocks bG END_PORTAL_FRAME
Blocks bH END_STONE
Blocks bh RED_MUSHROOM_BLOCK
Blocks bI DRAGON_EGG
Blocks bi IRON_BARS
Blocks bj GLASS_PANE
Blocks bJ REDSTONE_LAMP
Blocks bK LIT_REDSTONE_LAMP
Blocks bk MELON_BLOCK
Blocks bL DOUBLE_WOODEN_SLAB
Blocks bl PUMPKIN_STEM
Blocks bm MELON_STEM
Blocks bM WOODEN_SLAB
Blocks bN COCOA
Blocks B NOTEBLOCK
Blocks bn VINE
Blocks bo FENCE_GATE
Blocks bO SANDSTONE_STAIRS
Blocks bP EMERALD_ORE
Blocks bp SPRUCE_FENCE_GATE
Blocks bq BIRCH_FENCE_GATE
Blocks bQ ENDER_CHEST
Blocks br JUNGLE_FENCE_GATE
Blocks bR TRIPWIRE_HOOK
Blocks bs DARK_OAK_FENCE_GATE
Blocks b STONE
Blocks bS TRIPWIRE
Blocks bt ACACIA_FENCE_GATE
Blocks bT EMERALD_BLOCK
Blocks bu BRICK_STAIRS
Blocks bU SPRUCE_STAIRS
Blocks bV BIRCH_STAIRS
Blocks bv STONE_BRICK_STAIRS
Blocks bW JUNGLE_STAIRS
Blocks bw MYCELIUM
Blocks bX COMMAND_BLOCK
Blocks bx WATERLILY
Blocks bY BEACON
Blocks by NETHER_BRICK
Blocks bZ COBBLESTONE_WALL
Blocks bz NETHER_BRICK_FENCE
Blocks cA COAL_BLOCK
Blocks ca FLOWER_POT
Blocks cb CARROTS
Blocks C BED
Blocks cB PACKED_ICE
Blocks cC ACACIA_STAIRS
Blocks cc POTATOES
Blocks cD DARK_OAK_STAIRS
Blocks cd WOODEN_BUTTON
Blocks ce SKULL
Blocks cE SLIME
Blocks cf ANVIL
Blocks cF DOUBLE_PLANT
Blocks c GRASS
Blocks cG STAINED_GLASS
Blocks cg TRAPPED_CHEST
Blocks ch LIGHT_WEIGHTED_PRESSURE_PLATE
Blocks cH STAINED_GLASS_PANE
Blocks ci HEAVY_WEIGHTED_PRESSURE_PLATE
Blocks cI PRISMARINE
Blocks cJ SEA_LANTERN
Blocks cj UNPOWERED_COMPARATOR
Blocks ck POWERED_COMPARATOR
Blocks cK STANDING_BANNER
Blocks cl DAYLIGHT_DETECTOR
Blocks cL WALL_BANNER
Blocks cm DAYLIGHT_DETECTOR_INVERTED
Blocks cM RED_SANDSTONE
Blocks cN RED_SANDSTONE_STAIRS
Blocks cn REDSTONE_BLOCK
Blocks cO DOUBLE_STONE_SLAB2
Blocks co QUARTZ_ORE
Blocks cp HOPPER
Blocks cP STONE_SLAB2
Blocks cq QUARTZ_BLOCK
Blocks cr QUARTZ_STAIRS
Blocks cs ACTIVATOR_RAIL
Blocks ct DROPPER
Blocks cu STAINED_HARDENED_CLAY
Blocks cv BARRIER
Blocks cw IRON_TRAPDOOR
Blocks cx HAY_BLOCK
Blocks cy CARPET
Blocks cz HARDENED_CLAY
Blocks d DIRT
Blocks D GOLDEN_RAIL
Blocks e COBBLESTONE
Blocks E DETECTOR_RAIL
Blocks f PLANKS
Blocks F STICKY_PISTON
Blocks g SAPLING
Blocks G WEB
Blocks h BEDROCK
Blocks H TALLGRASS
Blocks I DEADBUSH
Blocks i FLOWING_WATER
Blocks J PISTON
Blocks j WATER
Blocks k FLOWING_LAVA
Blocks K PISTON_HEAD
BlockSkull a FACING
BlockSkull b NODROP
Blocks l LAVA
Blocks L WOOL
BlockSmoothBrick a VARIANT
BlockSmoothBrick$EnumStonebrickType a DEFAULT
BlockSmoothBrick$EnumStonebrickType b MOSSY
BlockSmoothBrick$EnumStonebrickType c CRACKED
BlockSmoothBrick$EnumStonebrickType d CHISELED
Blocks M PISTON_EXTENSION
Blocks m SAND
Blocks n GRAVEL
BlockSnow a LAYERS
Blocks N YELLOW_FLOWER
Blocks o GOLD_ORE
BlockSoil a MOISTURE
Blocks O RED_FLOWER
Blocks P BROWN_MUSHROOM
Blocks p IRON_ORE
BlockSponge a WET
Blocks q COAL_ORE
Blocks Q RED_MUSHROOM
Blocks R GOLD_BLOCK
Blocks r LOG
Blocks S IRON_BLOCK
Blocks s LOG2
BlockStainedGlass a COLOR
BlockStainedGlassPane a COLOR
BlockStairs a FACING
BlockStairs b HALF
BlockStairs$EnumHalf a TOP
BlockStairs$EnumHalf b BOTTOM
BlockStairs$EnumStairShape a STRAIGHT
BlockStairs$EnumStairShape b INNER_LEFT
BlockStairs$EnumStairShape c INNER_RIGHT
BlockStairs$EnumStairShape d OUTER_LEFT
BlockStairs$EnumStairShape e OUTER_RIGHT
BlockStairs N SHAPE
BlockStateBoolean a (Ljava/lang/String;)LBlockStateBoolean; of
BlockStateDirection a (Ljava/lang/String;)LBlockStateDirection; of
BlockStateDirection a (Ljava/lang/String;Lcom/google/common/base/Predicate;)LBlockStateDirection; of
BlockStateEnum a (Ljava/lang/String;Ljava/lang/Class;)LBlockStateEnum; of
BlockStateEnum a (Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Enum;)LBlockStateEnum; of
BlockStateInteger a (Ljava/lang/String;II)LBlockStateInteger; of
BlockStateList b ()LIBlockData; getBlockData
BlockStateList c ()LBlock; getBlock
Blocks T DOUBLE_STONE_SLAB
BlockStem a AGE
BlockStem b FACING
BlockStem N blockFruit
BlockStepAbstract a HALF
BlockStepAbstract$EnumSlabHalf a TOP
BlockStepAbstract$EnumSlabHalf b BOTTOM
Block$StepSound a ()Ljava/lang/String; getBreakSound
Block$StepSound b ()Ljava/lang/String; getPlaceSound
Block$StepSound c ()Ljava/lang/String; getStepSound
Block$StepSound d ()F getVolume1
Block$StepSound e ()F getVolume2
Blocks t LEAVES
BlockStone a VARIANT
BlockStone$EnumStoneVariant a STONE
BlockStone$EnumStoneVariant b GRANITE
BlockStone$EnumStoneVariant c GRANITE_SMOOTH
BlockStone$EnumStoneVariant d DIORITE
BlockStone$EnumStoneVariant e DIORITE_SMOOTH
BlockStone$EnumStoneVariant f ANDESITE
BlockStone$EnumStoneVariant g ANDESITE_SMOOTH
Blocks u LEAVES2
Blocks U STONE_SLAB
Blocks V BRICK_BLOCK
Blocks v SPONGE
Blocks w GLASS
Blocks W TNT
Blocks X BOOKSHELF
Blocks x LAPIS_ORE
Blocks y LAPIS_BLOCK
Blocks Y MOSSY_COBBLESTONE
Blocks z DISPENSER
Blocks Z OBSIDIAN
BlockTallPlant a VARIANT
BlockTallPlant b HALF
BlockTallPlant$EnumTallFlowerVariants a SUNFLOWER
BlockTallPlant$EnumTallFlowerVariants b SYRINGA
BlockTallPlant$EnumTallFlowerVariants c GRASS
BlockTallPlant$EnumTallFlowerVariants d FERN
BlockTallPlant$EnumTallFlowerVariants e ROSE
BlockTallPlant$EnumTallFlowerVariants f PAEONIA
BlockTallPlant$EnumTallPlantHalf a UPPER
BlockTallPlant$EnumTallPlantHalf b LOWER
BlockThin b NORTH
BlockThin N EAST
BlockThin O SOUTH
BlockThin P WEST
Block t ()LMaterial; getMaterial
BlockTNT a EXPLODE
BlockTorch a FACING
BlockTorch a (LWorld;LBlockPosition;LIBlockData;LBlock;)V doPhysics
BlockTorch c (LWorld;LBlockPosition;LIBlockData;)V onPlace
BlockTrapdoor a FACING
BlockTrapdoor b OPEN
BlockTrapdoor$EnumTrapdoorHalf a TOP
BlockTrapdoor$EnumTrapdoorHalf b BOTTOM
BlockTrapdoor N HALF
BlockTripwire a POWERED
BlockTripwire b SUSPENDED
BlockTripwireHook a FACING
BlockTripwireHook b POWERED
BlockTripwireHook N ATTACHED
BlockTripwireHook O SUSPENDED
BlockTripwire N ATTACHED
BlockTripwire O DISARMED
BlockTripwire P NORTH
BlockTripwire Q EAST
BlockTripwire R SOUTH
BlockTripwire S WEST
BlockVine a (LEnumDirection;)LBlockStateBoolean; getDirection
BlockVine a UP
BlockVine b NORTH
BlockVine N EAST
BlockVine O SOUTH
BlockVine P WEST
Block v ()Z isOccluding
BlockWallSign a FACING
BlockWood a VARIANT
BlockWoodenStep b VARIANT
BlockWood$EnumLogVariant a OAK
BlockWood$EnumLogVariant b SPRUCE
BlockWood$EnumLogVariant c BIRCH
BlockWood$EnumLogVariant d JUNGLE
BlockWood$EnumLogVariant e ACACIA
BlockWood$EnumLogVariant f DARK_OAK
Block w strength
Block x durability
Block y ()Z isTicking
Block z ()Z isTileEntity
CancelledPacketHandleException a INSTANCE
ChatClickable$EnumClickAction a OPEN_URL
ChatClickable$EnumClickAction b OPEN_FILE
ChatClickable$EnumClickAction c RUN_COMMAND
ChatClickable$EnumClickAction d TWITCH_USER_INFO
ChatClickable$EnumClickAction e SUGGEST_COMMAND
ChatClickable$EnumClickAction f CHANGE_PAGE
ChatComponentUtils a (LICommandListener;LIChatBaseComponent;LEntity;)LIChatBaseComponent; filterForDisplay
ChatHoverable$EnumHoverAction a SHOW_TEXT
ChatHoverable$EnumHoverAction b SHOW_ACHIEVEMENT
ChatHoverable$EnumHoverAction c SHOW_ITEM
ChatHoverable$EnumHoverAction d SHOW_ENTITY
ChatModifier a (LChatClickable;)LChatModifier; setChatClickable
ChatModifier a (LChatHoverable;)LChatModifier; setChatHoverable
ChatModifier a (LChatModifier;)LChatModifier; setChatModifier
ChatModifier a ()LEnumChatFormat; getColor
ChatModifier a (LEnumChatFormat;)LChatModifier; setColor
ChatModifier a (Ljava/lang/Boolean;)LChatModifier; setBold
ChatModifier a (Ljava/lang/String;)LChatModifier; setInsertion
ChatModifier b (Ljava/lang/Boolean;)LChatModifier; setItalic
ChatModifier b ()Z isBold
ChatModifier c (Ljava/lang/Boolean;)LChatModifier; setStrikethrough
ChatModifier c ()Z isItalic
ChatModifier d (Ljava/lang/Boolean;)LChatModifier; setUnderline
ChatModifier d ()Z isStrikethrough
ChatModifier e (Ljava/lang/Boolean;)LChatModifier; setRandom
ChatModifier e ()Z isUnderlined
ChatModifier f ()Z isRandom
ChatModifier m ()LChatModifier; clone
Chunk a (III)LBlock; getTypeAbs
Chunk a (LBlockPosition;)LBlock; getType
Chunk a (LBlockPosition;LWorldChunkManager;)LBiomeBase; getBiome
Chunk a (LEnumSkyBlock;LBlockPosition;)I getBrightness
Chunk a (LIChunkProvider;LIChunkProvider;II)V loadNearby
Chunk a locX
Chunk b (J)V setLastSaved
Chunk b (LEntity;)V removeEntity
Chunk b locZ
Chunk b ()V initLighting
ChunkCoordIntPair a x
ChunkCoordIntPair b z
Chunk c ()V addEntities
Chunk d sections
Chunk d ()V removeEntities
Chunk$EnumTileEntityState a IMMEDIATE
Chunk$EnumTileEntityState b QUEUED
Chunk$EnumTileEntityState c CHECK
Chunk f (III)LBlock; getType
Chunk f ()Z isEmpty
Chunk g (LBlockPosition;)LIBlockData; getBlockData
Chunk h ()[LChunkSection; getSections
Chunk i world
Chunk i ()Z isReady
Chunk j heightMap
Chunk k ()[B getBiomeIndex
Chunk l tileEntities
Chunk m entitySlices
Chunk n done
Chunk o lit
Chunk p ()LWorld; getWorld
ChunkProviderServer a forceChunkLoad
ChunkProviderServer a (LChunk;)V saveChunkNOP
ChunkProviderServer b (II)V queueUnload
ChunkProviderServer b (LChunk;)V saveChunk
ChunkProviderServer c (II)LChunk; getChunkAt
ChunkProviderServer c unloadQueue
ChunkProviderServer d emptyChunk
ChunkProviderServer e chunkProvider
ChunkProviderServer e (II)LChunk; loadChunk
ChunkProviderServer f chunkLoader
ChunkProviderServer g chunks
ChunkProviderServer h chunkList
ChunkProviderServer i world
Chunk r ()Ljava/util/Map; getTileEntities
ChunkSection a (III)LIBlockData; getType
ChunkSection a (IIILIBlockData;)V setType
ChunkSection a yPos
ChunkSection b nonEmptyBlockCount
ChunkSection b ()Z shouldTick
ChunkSection c tickingBlockCount
ChunkSection d blockIds
ChunkSection d ()I getYPosition
ChunkSection e emittedLight
ChunkSection e ()V recalcBlockCounts
ChunkSection f skyLight
ChunkSection g ()[C getIdArray
ChunkSection h ()LNibbleArray; getEmittedLightArray
ChunkSection i ()LNibbleArray; getSkyLightArray
Chunk s lastSaved
Chunk s ()[LEntitySlice; getEntitySlices
Chunk t ()Z isDone
CommandAbstract a (LICommandListener;[Ljava/lang/String;LBlockPosition;)Ljava/util/List; tabComplete
CommandAbstract a (LICommandListener;)Z canUse
CommandAbstract b ([Ljava/lang/String;I)Z isListStart
CommandBlockListenerAbstract a (Ljava/lang/String;)V setCommand
CommandBlockListenerAbstract b (Ljava/lang/String;)V setName
CommandBlockListenerAbstract l ()Ljava/lang/String; getCommand
CommandException a ()[Ljava/lang/Object; getArgs
CommandGamemode a (LICommandListener;[Ljava/lang/String;)V execute
CommandGamemode c (LICommandListener;)Ljava/lang/String; getUsage
CommandGamemode c ()Ljava/lang/String; getCommand
CommandObjectiveExecutor$EnumCommandResult a SUCCESS_COUNT
CommandObjectiveExecutor$EnumCommandResult b AFFECTED_BLOCKS
CommandObjectiveExecutor$EnumCommandResult c AFFECTED_ENTITIES
CommandObjectiveExecutor$EnumCommandResult d AFFECTED_ITEMS
CommandObjectiveExecutor$EnumCommandResult e QUERY_RESULT
Container a (IIILEntityHuman;)LItemStack; clickItem
Container a (ILItemStack;)V setItem
Container a (I)LSlot; getSlot
Container a (LICrafting;)V addSlotListener
Container a (LIInventory;I)LSlot; getSlot
ContainerBeacon a beacon
ContainerBrewingStand a brewingStand
ContainerChest a container
ContainerDispenser a items
Container d windowId
Container e listeners
ContainerEnchantTable$1 a enchantTable
ContainerEnchantTable a enchantSlots
ContainerEnchantTable g costs
ContainerEnchantTable i world
ContainerEnchantTable j position
Container f dragType
ContainerFurnace a furnace
ContainerHopper a hopper
ContainerMerchant a merchant
ContainerPlayer a craftInventory
ContainerPlayer f resultInventory
ContainerWorkbench a craftInventory
ContainerWorkbench f resultInventory
Convertable a (Ljava/lang/String;LIProgressUpdate;)Z convert
Convertable b (Ljava/lang/String;)Z isConvertable
CraftingManager a ()LCraftingManager; getInstance
CraftingManager a (LInventoryCrafting;LWorld;)LItemStack; craft
CraftingManager a (LItemStack;[Ljava/lang/Object;)LShapedRecipes; registerShapedRecipe
CraftingManager b (LItemStack;[Ljava/lang/Object;)V registerShapelessRecipe
CraftingManager b ()Ljava/util/List; getRecipes
CraftingManager b recipes
DamageSource a FIRE
DamageSource a (LEntityArrow;LEntity;)LDamageSource; arrow
DamageSource a (LEntityFireball;LEntity;)LDamageSource; fireball
DamageSource a (LEntityHuman;)LDamageSource; playerAttack
DamageSource a (LEntity;LEntity;)LDamageSource; projectile
DamageSource a (LEntityLiving;)LDamageSource; mobAttack
DamageSource a (LExplosion;)LDamageSource; explosion
DamageSource b (LEntityLiving;)LIChatBaseComponent; getLocalizedDeathMessage
DamageSource b LIGHTNING
DamageSource c BURN
DamageSource c ()Z isExplosion
DamageSource d LAVA
DamageSource e STUCK
DamageSource e ()Z ignoresArmor
DamageSource f DROWN
DamageSource f ()F getExhaustionCost
DamageSource g STARVE
DamageSource g ()Z ignoresInvulnerability
DamageSource h CACTUS
DamageSource h ()Z isStarvation
DamageSource i FALL
DamageSource j ()LEntity; getEntity
DamageSource j OUT_OF_WORLD
DamageSource k GENERIC
DamageSource k ()LDamageSource; setIgnoreArmor
DamageSource l MAGIC
DamageSource m WITHER
DamageSource n ANVIL
DamageSource n ()LDamageSource; setExplosion
DamageSource o FALLING_BLOCK
DamageSource p translationIndex
DamageSource s ()Z isMagic
DamageSource t ()LDamageSource; setMagic
DataWatcher a (I)B getByte
DataWatcher a (II)V add
DataWatcher b (ILjava/lang/Object;)V watch
DataWatcher b (I)S getShort
DataWatcher c (I)I getInt
DataWatcher d (I)F getFloat
DataWatcher e (I)Ljava/lang/String; getString
DataWatcher f (I)LItemStack; getItemStack
DataWatcher i (I)V update
DedicatedPlayerList b ()LDedicatedServer; getServer
DedicatedServer$2 a server
DedicatedServer a (Ljava/lang/String;LICommandListener;)V issueCommand
DedicatedServer k LOGGER
DedicatedServer o propertyManager
DedicatedServer q generateStructures
DispenseBehaviorProjectile b ()F getPower
Enchantment a byId
Enchantment a (LItemStack;)Z canEnchant
Enchantment A LURE
Enchantment B id
Enchantment b ()I getMaxLevel
Enchantment b (Ljava/lang/String;)LEnchantment; getByName
Enchantment c (I)LEnchantment; getById
Enchantment c ()Ljava/util/Set; getEffects
Enchantment c PROTECTION_ENVIRONMENTAL
Enchantment C slot
Enchantment d ()I getRandomWeight
Enchantment D name
Enchantment d PROTECTION_FIRE
Enchantment e ()I getStartLevel
Enchantment e PROTECTION_FALL
Enchantment f PROTECTION_EXPLOSIONS
Enchantment F weight
Enchantment g PROTECTION_PROJECTILE
Enchantment h OXYGEN
Enchantment i WATER_WORKER
Enchantment j THORNS
Enchantment k DEPTH_STRIDER
Enchantment l DAMAGE_ALL
EnchantmentManager a (ILItemStack;)I getEnchantmentLevel
EnchantmentManager a (LEntity;)I getOxygenEnchantmentLevel
EnchantmentManager b (LEntityLiving;)I getFireAspectEnchantmentLevel
EnchantmentManager c (LEntityLiving;)I getDigSpeedEnchantmentLevel
EnchantmentManager e (LEntityLiving;)Z hasSilkTouchEnchantment
EnchantmentManager f (LEntityLiving;)I getBonusBlockLootEnchantmentLevel
EnchantmentManager i (LEntityLiving;)I getBonusMonsterLootEnchantmentLevel
Enchantment m DAMAGE_UNDEAD
Enchantment n DAMAGE_ARTHROPODS
Enchantment o KNOCKBACK
Enchantment p FIRE_ASPECT
Enchantment q LOOT_BONUS_MOBS
Enchantment r DIG_SPEED
EnchantmentSlotType a ALL
EnchantmentSlotType a (LItem;)Z canEnchant
EnchantmentSlotType b ARMOR
EnchantmentSlotType c ARMOR_FEET
EnchantmentSlotType d ARMOR_LEGS
EnchantmentSlotType e ARMOR_TORSO
EnchantmentSlotType f ARMOR_HEAD
EnchantmentSlotType g WEAPON
EnchantmentSlotType h DIGGER
EnchantmentSlotType i FISHING_ROD
EnchantmentSlotType j BREAKABLE
EnchantmentSlotType k BOW
Enchantment s SILK_TOUCH
Enchantment t DURABILITY
Enchantment u LOOT_BONUS_BLOCKS
Enchantment v ARROW_DAMAGE
Enchantment w ARROW_KNOCKBACK
Enchantment x ARROW_FIRE
Enchantment y ARROW_INFINITE
Enchantment z LUCK
Entity aa justCreated
Entity ab fireProof
Entity ac datawatcher
Entity aC ()F getHeadRotation
Entity a (DDDFF)V setLocation
Entity a (DDD)V enderTeleportTo
Entity a (FF)V setSize
EntityAgeable a (I)V setAge
EntityAgeable a (IZ)V setAge
EntityAgeable a (LEntityAgeable;)LEntityAgeable; createChild
EntityAgeable b (I)V setAgeRaw
EntityAgeable l ()I getAge
Entity ai ()Z isAlive
Entity aj portalCooldown
Entity aj ()Z inBlock
Entity ak inPortal
Entity aK ()Ljava/util/UUID; getUniqueID
Entity A lastYaw
Entity a (LBlockPosition;FF)V setPositionRotation
Entity a (LCrashReportSystemDetails;)V appendEntityCrashDetails
Entity a (LDamageSource;F)Z damageEntity
Entity a (LEntityLightning;)V onLightningStrike
Entity a (LEntity;)V mount
Entity a (Ljava/lang/String;FF)V makeSound
Entity a (Ljava/lang/String;)V setCustomName
Entity a (LWorld;)V spawnIn
Entity am dimension
Entity aM ()Ljava/lang/String; getCustomName
EntityAnimal a (LDamageSource;F)Z damageEntity
EntityAnimal a (LEntityAnimal;)Z mate
EntityAnimal b (LEntityHuman;)I getExpValue
EntityAnimal cr ()Z isInLove
EntityAnimal C ()Z isTypeNotPersistent
Entity aN ()Z getCustomNameVisible
Entity aP ()LEnumDirection; getDirection
Entity aq uniqueID
Entity aR ()LAxisAlignedBB; getBoundingBox
EntityArmorStand a (LVector3f;)V setHeadPose
EntityArmorStand bk headPose
EntityArmorStand bl bodyPose
EntityArmorStand b (LVector3f;)V setBodyPose
EntityArmorStand bm leftArmPose
EntityArmorStand bn rightArmPose
EntityArmorStand bo leftLegPose
EntityArmorStand bp rightLegPose
EntityArmorStand c (LVector3f;)V setLeftArmPose
EntityArmorStand d (LVector3f;)V setRightArmPose
EntityArmorStand e (LVector3f;)V setLeftLegPose
EntityArmorStand f (LVector3f;)V setRightLegPose
EntityArmorStand g items
EntityArmorStand j (Z)V setSmall
EntityArmorStand k (Z)V setGravity
EntityArmorStand l (Z)V setArms
EntityArmorStand m (Z)V setBasePlate
EntityArmorStand n ()Z isSmall
EntityArmorStand p ()Z hasGravity
EntityArmorStand q ()Z hasArms
EntityArmorStand r ()Z hasBasePlate
EntityArrow a fromPlayer
EntityArrow a (I)V setKnockbackStrength
EntityArrow at damage
EntityArrow au knockbackStrength
EntityArrow a (Z)V setCritical
EntityArrow b shake
EntityArrow c shooter
EntityArrow i inGround
EntityArrow l ()Z isCritical
Entity aS ()F getHeadHeight
Entity as ()[LItemStack; getEquipment
Entity at invulnerable
Entity at ()Z isBurning
Entity aV ()LNBTTagCompound; getNBTTag
Entity av ()Z isSneaking
Entity aw ()Z isSprinting
Entity ax ()Z isInvisible
Entity az ()I getAirTicks
EntityBat a (Z)V setAsleep
EntityBat n ()Z isAsleep
Entity b (DDDFF)V setPositionRotation
Entity b (DDD)V setPosition
Entity b entityCount
Entity b (FF)V setYawPitch
Entity B lastPitch
Entity b (LDamageSource;)Z isInvulnerable
EntityBoat a (F)V setDamage
EntityChicken cl ()Z isChickenJockey
Entity c id
Entity c (ILItemStack;)V setEquipment
EntityComplexPart a owner
Entity C onGround
EntityCow a (LEntityAgeable;)LEntityAgeable; createChild
EntityCreeper b fuseTicks
EntityCreeper bm explosionRadius
EntityCreeper c maxFuseTicks
EntityCreeper n ()Z isPowered
Entity c (Z)V setSneaking
EntityDamageSource b (LEntityLiving;)LIChatBaseComponent; getLocalizedDeathMessage
EntityDamageSourceIndirect r owner
EntityDamageSource j ()LEntity; getEntity
Entity d (DDD)V move
Entity D positionChanged
Entity d (Z)V setSprinting
Entity e (I)V setOnFire
Entity e_ ()Ljava/lang/String; getName
EntityEnderDragon bA target
EntityEnderDragon bm children
EntityEnderDragon e (LDamageSource;F)Z dealDamage
EntityEnderman a (LIBlockData;)V setCarried
EntityEnderman cm ()LIBlockData; getCarried
EntityEnderman$PathfinderGoalEndermanPickupBlock a enderman
EntityExperienceOrb a (I)I getOrbValue
EntityExperienceOrb e value
EntityExperienceOrb f targetPlayer
EntityExperienceOrb g targetTime
Entity e (Z)V setInvisible
EntityFallingBlock a ticksLived
EntityFallingBlock b dropItem
EntityFallingBlock c tileEntityData
EntityFallingBlock d block
EntityFallingBlock f hurtEntities
EntityFallingBlock g fallHurtMax
EntityFallingBlock h fallHurtAmount
EntityFallingBlock l ()LIBlockData; getBlock
Entity f boundingBox
Entity F ()I getId
EntityFireball a (LDamageSource;F)Z damageEntity
EntityFireball a shooter
EntityFireball b dirX
EntityFireball c dirY
EntityFireball d dirZ
EntityFireworks a ticksFlown
EntityFireworks b expectedLifespan
EntityFishingHook b owner
EntityFishingHook c hooked
Entity f (I)V burn
Entity f_ ()LIChatBaseComponent; getScoreboardDisplayName
EntityGuardian a (Z)V setElder
EntityGuardian br goalRandomStroll
EntityGuardian cn ()Z isElder
Entity G velocityChanged
Entity g (Z)V setCustomNameVisible
EntityHanging a blockPosition
EntityHanging a (LDamageSource;F)Z damageEntity
EntityHanging a (LEnumDirection;)V setDirection
EntityHanging b direction
EntityHanging j ()Z survives
EntityHanging n ()LBlockPosition; getBlockPosition
EntityHanging o ()V updateBoundingBox
Entity h (I)V setAirTicks
Entity H ()LDataWatcher; getDataWatcher
EntityHorse bE inventoryChest
EntityHorse b (Ljava/lang/String;)V setOwnerUUID
EntityHorse bt attributeJumpStrength
EntityHorse cC ()I getTemper
EntityHorse cF ()D getJumpStrength
EntityHorse cI ()I getMaxDomestication
EntityHorse cl ()I getType
EntityHorse cm ()I getVariant
EntityHorse co ()Z isTame
EntityHorse ct ()Ljava/lang/String; getOwnerUUID
EntityHorse cw ()Z hasChest
EntityHorse cX ()V dropChest
EntityHorse da ()V loadChest
EntityHorse l (Z)V setTame
EntityHorse o (Z)V setHasChest
EntityHorse r (I)V setType
EntityHorse s (I)V setVariant
EntityHorse t (I)V setTemper
EntityHuman a enderChest
EntityHuman a (F)V applyExhaustion
EntityHuman a (I)V levelDown
EntityHuman a (LBlockPosition;Z)V setRespawnPosition
EntityHuman a (LEntityHorse;LIInventory;)V openHorseInventory
EntityHuman a (LEntityHuman;Z)V copyTo
EntityHuman a (LIInventory;)V openContainer
EntityHuman a (LIMerchant;)V openTrade
EntityHuman a (LItemStack;)V openBook
EntityHuman a (LItemStack;Z)LEntityItem; drop
EntityHuman a (LITileEntityContainer;)V openTileEntity
EntityHuman a (LTileEntitySign;)V openSign
EntityHuman a (LWorld;LBlockPosition;Z)LBlockPosition; getBed
EntityHuman bA abilities
EntityHuman bB expLevel
EntityHuman bC expTotal
EntityHuman bD exp
EntityHuman bG hookedFish
EntityHuman bi inventory
EntityHuman b (I)V enchantDone
EntityHuman bj defaultContainer
EntityHuman bk activeContainer
EntityHuman bl foodData
EntityHuman b sleepTicks
EntityHuman bw sleeping
EntityHuman bW ()Z isBlocking
EntityHuman bX ()I getScore
EntityHuman cd ()Lcom/mojang/authlib/GameProfile; getProfile
EntityHuman cf ()Z isDeeplySleeping
EntityHuman ch ()LBlockPosition; getBed
EntityHuman ci ()Z isRespawnForced
EntityHuman ck ()I getExpToLevel
EntityHuman cl ()LFoodMetaData; getFoodData
EntityHuman co ()LInventoryEnderChest; getEnderChest
EntityHuman cp ()LScoreboard; getScoreboard
EntityHuman$EnumBedResult a OK
EntityHuman$EnumBedResult b NOT_POSSIBLE_HERE
EntityHuman$EnumBedResult c NOT_POSSIBLE_NOW
EntityHuman$EnumBedResult d TOO_FAR_AWAY
EntityHuman$EnumBedResult e OTHER_PROBLEM
EntityHuman$EnumBedResult f NOT_SAFE
EntityHuman$EnumChatVisibility a FULL
EntityHuman$EnumChatVisibility b SYSTEM
EntityHuman$EnumChatVisibility c HIDDEN
EntityHuman f (LEntity;)V attack
EntityHuman k (DDD)V checkMovement
EntityHuman n ()V closeInventory
EntityHuman r (I)V setScore
EntityHuman s (I)V addScore
EntityHuman t ()V updateAbilities
EntityHuman u (I)V giveExp
EntityHuman v ()Z isSpectator
Entity I dead
Entity i fireTicks
Entity i (LEntity;)V collide
EntityInsentient a (LDifficultyDamageScaler;LGroupDataEntity;)LGroupDataEntity; prepare
EntityInsentient a (LEntity;Z)V setLeashHolder
EntityInsentient A ()LItem; getLoot
EntityInsentient a lookController
EntityInsentient a (ZZ)V unleash
EntityInsentient bi targetSelector
EntityInsentient bj dropChances
EntityInsentient b (LEntityHuman;)I getExpValue
EntityInsentient bl equipment
EntityInsentient bm canPickUpLoot
EntityInsentient bn persistent
EntityInsentient bS ()Z canSpawn
EntityInsentient b (ZI)V dropDeathLoot
EntityInsentient bZ ()Z isPersistent
EntityInsentient cd ()LEntity; getLeashHolder
EntityInsentient c goalTarget
EntityInsentient c (ILItemStack;)V setEquipment
EntityInsentient C ()Z isTypeNotPersistent
EntityInsentient d (LEntityLiving;)V setGoalTarget
EntityInsentient$EnumEntityPositionType a ON_GROUND
EntityInsentient$EnumEntityPositionType b IN_AIR
EntityInsentient$EnumEntityPositionType c IN_WATER
EntityInsentient f moveController
EntityInsentient h navigation
EntityInsentient i goalSelector
EntityInsentient p ()LControllerLook; getControllerLook
EntityInsentient q ()LControllerMove; getControllerMove
EntityInsentient r ()LControllerJump; getControllerJump
EntityInsentient s ()LNavigationAbstract; getNavigation
EntityInsentient t ()LEntitySenses; getEntitySenses
EntityInsentient u ()LEntityLiving; getGoalTarget
EntityIronGolem cn ()Z isPlayerCreated
EntityIronGolem l (Z)V setPlayerCreated
EntityItem a (LItemStack;)V setItemStack
EntityItem c age
EntityItem d pickupDelay
EntityItemFrame a (I)V setRotation
EntityItemFrame a (IZ)V setRotation
EntityItemFrame a (LItemStack;)V setItem
EntityItemFrame a (LItemStack;Z)V setItem
EntityItemFrame o ()LItemStack; getItem
EntityItemFrame p ()I getRotation
EntityItem l ()LItemStack; getItemStack
Entity J ()V die
Entity J width
Entity K length
EntityLargeFireball e yield
EntityLightning b lifeTicks
EntityLiving aD maxNoDamageTicks
EntityLiving a (LDamageSource;F)Z damageEntity
EntityLiving a (LDamageSource;)V die
EntityLiving a (LEntity;I)V receive
EntityLiving a (LEntity;)V mount
EntityLiving a (LIAttribute;)LAttributeInstance; getAttributeInstance
EntityLiving a (LMobEffectList;)Z hasEffect
EntityLiving aN killer
EntityLiving aO lastDamageByPlayerTime
EntityLiving aQ ticksFarFromPlayer
EntityLiving as ()[LItemStack; getEquipment
EntityLiving au hurtTicks
EntityLiving ax deathTicks
EntityLiving aX lastDamage
EntityLiving aX ()V initAttributes
EntityLiving aY ()Z canBreatheUnderwater
EntityLiving a (ZI)V dropEquipment
EntityLiving bb ()Z alwaysGivesExp
EntityLiving bd ()LEntityLiving; getLastDamager
EntityLiving bi lastDamager
EntityLiving bj hurtTimestamp
EntityLiving bJ ()Z isSleeping
EntityLiving bK ()V doTick
EntityLiving bk ()V removeAllEffects
EntityLiving b (LDamageSource;F)F applyArmorModifier
EntityLiving b (LEntityHuman;)I getExpValue
EntityLiving bl ()Ljava/util/Collection; getEffects
EntityLiving b (LMobEffectList;)LMobEffect; getEffect
EntityLiving bN ()F getAbsorptionHearts
EntityLiving bn ()F getHealth
EntityLiving bO ()LScoreboardTeamBase; getScoreboardTeam
EntityLiving bq ()V getRareDrop
EntityLiving bu ()F getMaxHealth
EntityLiving bv ()I getArrowsStuck
EntityLiving by ()LAttributeMapBase; getAttributeMap
EntityLiving b (ZI)V dropDeathLoot
EntityLiving bz ()LEnumMonsterType; getMonsterType
EntityLiving c (ILItemStack;)V setEquipment
EntityLiving c (LDamageSource;F)F applyMagicModifier
EntityLiving c (LMobEffect;)V addEffect
EntityLiving f combatTracker
EntityLiving g effects
EntityLiving h (F)V heal
EntityLiving h_ ()V enterCombat
EntityLiving i (F)V setHealth
EntityLiving i updateEffects
EntityLiving j (F)V damageArmor
EntityLiving j ()V exitCombat
EntityLiving j_ ()Z isBaby
EntityLiving k (I)Z hasEffect
EntityLiving m (F)V setAbsorptionHearts
EntityLiving m (I)V removeEffect
EntityLiving o (I)V setArrowsStuck
EntityLiving p (I)LItemStack; getEquipment
EntityLiving t (LEntity;)Z hasLineOfSight
Entity l passenger
Entity l_ ()Z hasCustomName
EntityMinecartAbstract a (F)V setDamage
EntityMinecartAbstract a (LDamageSource;F)Z damageEntity
EntityMinecartAbstract a (LIBlockData;)V setDisplayBlock
EntityMinecartAbstract c matrix
EntityMinecartAbstract$EnumMinecartType a RIDEABLE
EntityMinecartAbstract$EnumMinecartType b CHEST
EntityMinecartAbstract$EnumMinecartType c FURNACE
EntityMinecartAbstract$EnumMinecartType d TNT
EntityMinecartAbstract$EnumMinecartType e SPAWNER
EntityMinecartAbstract$EnumMinecartType f HOPPER
EntityMinecartAbstract$EnumMinecartType g COMMAND_BLOCK
EntityMinecartAbstract J ()V die
EntityMinecartAbstract l (I)V SetDisplayBlockOffset
EntityMinecartAbstract p ()F getDamage
EntityMinecartAbstract q ()I getType
EntityMinecartAbstract t ()LIBlockData; getDisplayBlock
EntityMinecartAbstract v ()I getDisplayBlockOffset
EntityMinecartCommandBlock j ()LCommandBlockListenerAbstract; getCommandBlock
EntityMinecartContainer a items
EntityMonster a (LDamageSource;F)Z damageEntity
Entity M ()V burnFromLava
Entity m vehicle
Entity m ()V recalcPosition
Entity n attachedToPlayer
Entity N ()V extinguish
EntityOcelot ct ()I getCatType
EntityOcelot r (I)V setCatType
Entity O fallDistance
EntityOwnable b ()Ljava/lang/String; getOwnerUUID
EntityOwnable m_ ()LEntity; getOwner
Entity o world
EntityPainting c art
EntityPainting$EnumArt a KEBAB
EntityPainting$EnumArt b AZTEC
EntityPainting$EnumArt c ALBAN
EntityPainting$EnumArt d AZTEC_2
EntityPainting$EnumArt e BOMB
EntityPainting$EnumArt f PLANT
EntityPainting$EnumArt g WASTELAND
EntityPainting$EnumArt h POOL
EntityPainting$EnumArt i COURBET
EntityPainting$EnumArt j SEA
EntityPainting$EnumArt k SUNSET
EntityPainting$EnumArt l CREEBET
EntityPainting$EnumArt m WANDERER
EntityPainting$EnumArt n GRAHAM
EntityPainting$EnumArt o MATCH
EntityPainting$EnumArt p BUST
EntityPainting$EnumArt q STAGE
EntityPainting$EnumArt r VOID
EntityPainting$EnumArt s SKULL_AND_ROSES
EntityPainting$EnumArt t WITHER
EntityPainting$EnumArt u FIGHTERS
EntityPainting$EnumArt v POINTER
EntityPainting$EnumArt w PIGSCENE
EntityPainting$EnumArt x BURNING_SKULL
EntityPainting$EnumArt y SKELETON
EntityPainting$EnumArt z DONKEY_KONG
EntityPig cl ()Z hasSaddle
EntityPig l (Z)V setSaddle
EntityPigZombie bm angerLevel
EntityPigZombie bn soundDelay
EntityPigZombie bo hurtBy
Entity p lastX
EntityPlayer a (LContainer;)V updateInventory
EntityPlayer a (Ljava/lang/String;Ljava/lang/String;)V setResourcePack
EntityPlayer A ()LServerStatisticManager; getStatisticManager
EntityPlayer a playerConnection
EntityPlayer bI locale
EntityPlayer bJ removeQueue
EntityPlayer bP lastSentExp
EntityPlayer bQ invulnerableTicks
EntityPlayer b server
EntityPlayer bV containerCounter
EntityPlayer c playerInteractManager
EntityPlayer cs ()V nextContainerCounter
EntityPlayer e (LEntity;)V setSpectatorTarget
EntityPlayer E ()LIChatBaseComponent; getPlayerListName
EntityPlayer f chunkCoordIntPairQueue
EntityPlayer g_ ()V syncInventory
EntityPlayer h ping
EntityPlayer i viewingCredits
EntityPlayer o ()V broadcastCarriedItem
EntityPlayer r ()V triggerHealthUpdate
EntityPlayer y ()LEntityHuman$EnumChatVisibility; getChatFlags
EntityPlayer z ()V resetIdleTimer
EntityPotion a (I)V setPotionValue
EntityPotion c item
EntityPotion o ()I getPotionValue
EntityProjectile a inGround
EntityProjectile b shake
EntityProjectile c blockX
EntityProjectile d blockY
EntityProjectile e blockZ
EntityProjectile f inBlockId
EntityProjectile g shooter
EntityProjectile h shooterName
EntityProjectile n ()LEntityLiving; getShooter
Entity q lastY
Entity Q ()V checkBlockCollisions
EntityRabbit cn ()I getRabbitType
EntityRabbit$EnumRabbitState a NONE
EntityRabbit$EnumRabbitState b HOP
EntityRabbit$EnumRabbitState c STEP
EntityRabbit$EnumRabbitState d SPRINT
EntityRabbit$EnumRabbitState e ATTACK
EntityRabbit r (I)V setRabbitType
Entity r lastZ
EntitySheep b (LEnumColor;)V setColor
EntitySheep cl ()LEnumColor; getColor
EntitySheep cm ()Z isSheared
EntitySheep l (Z)V setSheared
EntitySilverfish$PathfinderGoalSilverfishHideInBlock a silverfish
EntitySilverfish$PathfinderGoalSilverfishWakeOthers a silverfish
EntitySkeleton a (I)V setSkeletonType
EntitySkeleton cm ()I getSkeletonType
EntitySlime a (I)V setSize
EntitySlime A ()LItem; getLoot
EntitySlime cm ()I getSize
Entity s locX
EntitySpider a (LDifficultyDamageScaler;LGroupDataEntity;)LGroupDataEntity; prepare
EntitySpider aS ()F getHeadHeight
EntityTameableAnimal b (Ljava/lang/String;)V setOwnerUUID
EntityTameableAnimal cl ()Z isTamed
EntityTameableAnimal cn ()Z isSitting
EntityTameableAnimal co ()LEntityLiving; getOwner
EntityTameableAnimal cp ()LPathfinderGoalSit; getGoalSit
EntityTameableAnimal m (Z)V setTamed
EntityTameableAnimal n (Z)V setSitting
Entity t locY
Entity T noclip
EntityTNTPrimed a fuseTicks
EntityTNTPrimed b source
EntityTNTPrimed j ()LEntityLiving; getSource
EntityTNTPrimed l ()V explode
EntityTracker a (LEntity;II)V addEntity
EntityTracker a (LEntity;IIZ)V addEntity
EntityTracker a (LEntity;)V track
EntityTracker a ()V updatePlayers
EntityTracker b (LEntity;LPacket;)V sendPacketToEntity
EntityTracker b (LEntityPlayer;)V untrackPlayer
EntityTracker b (LEntity;)V untrackEntity
EntityTracker b world
EntityTracker d trackedEntities
EntityTrackerEntry a (Ljava/util/List;)V track
EntityTrackerEntry a (LPacket;)V broadcast
EntityTrackerEntry a tracker
EntityTrackerEntry b (LEntityPlayer;)V updatePlayer
EntityTrackerEntry b (Ljava/util/List;)V scanPlayers
EntityTrackerEntry b (LPacket;)V broadcastIncludingSelf
EntityTrackerEntry d (LEntityPlayer;)V clear
EntityTrackerEntry d xLoc
EntityTrackerEntry e yLoc
EntityTrackerEntry f zLoc
EntityTrackerEntry g yRot
EntityTrackerEntry h xRot
EntityTrackerEntry o trackedPlayers
EntityTrackerEntry t isMoving
EntityTypes a eggInfo
EntityTypes a (Ljava/lang/String;LWorld;)LEntity; createEntityByName
EntityTypes$MonsterEggInfo d killEntityStatistic
Entity T ()Z isFireProof
Entity u locZ
Entity u_ ()Z getSendCommandFeedback
EntityVillager bB inventory
EntityVillager bm village
EntityVillager bn profession
EntityVillager bq tradingPlayer
EntityVillager bv riches
EntityVillager cl ()I getProfession
EntityVillager r (I)V setProfession
Entity v motX
Entity V random
EntityWitherSkull a (Z)V setCharged
EntityWitherSkull l ()Z isCharged
Entity w motY
EntityWolf a (LEnumColor;)V setCollarColor
EntityWolf cv ()Z isAngry
EntityWolf cw ()LEnumColor; getCollarColor
EntityWolf o (Z)V setAngry
Entity W ticksLived
Entity X maxFireTicks
Entity x motZ
Entity Y inWater
Entity y yaw
Entity Z noDamageTicks
EntityZombie a (LDamageSource;F)Z damageEntity
EntityZombie a (LDifficultyDamageScaler;LGroupDataEntity;)LGroupDataEntity; prepare
EntityZombie bq ()V getRareDrop
EntityZombie co ()Z isVillager
EntityZombie l (Z)V setBaby
EntityZombie m (Z)V setVillager
Entity z pitch
EnumAnimation a NONE
EnumAnimation b EAT
EnumAnimation c DRINK
EnumAnimation d BLOCK
EnumAnimation e BOW
EnumChatFormat a BLACK
EnumChatFormat b DARK_BLUE
EnumChatFormat c DARK_GREEN
EnumChatFormat c ()Z isFormat
EnumChatFormat d DARK_AQUA
EnumChatFormat e DARK_RED
EnumChatFormat f DARK_PURPLE
EnumChatFormat g GOLD
EnumChatFormat h GRAY
EnumChatFormat i DARK_GRAY
EnumChatFormat j BLUE
EnumChatFormat k GREEN
EnumChatFormat l AQUA
EnumChatFormat m RED
EnumChatFormat n LIGHT_PURPLE
EnumChatFormat o YELLOW
EnumChatFormat p WHITE
EnumChatFormat q OBFUSCATED
EnumChatFormat r BOLD
EnumChatFormat s STRIKETHROUGH
EnumChatFormat t UNDERLINE
EnumChatFormat u ITALIC
EnumChatFormat v RESET
EnumColor a ()I getColorIndex
EnumColor a (I)LEnumColor; fromInvColorIndex
EnumColor a WHITE
EnumColor b ()I getInvColorIndex
EnumColor b (I)LEnumColor; fromColorIndex
EnumColor b ORANGE
EnumColor c MAGENTA
EnumColor d LIGHT_BLUE
EnumColor e YELLOW
EnumColor f LIME
EnumColor g PINK
EnumColor h GRAY
EnumColor i SILVER
EnumColor j CYAN
EnumColor k PURPLE
EnumColor l BLUE
EnumColor m BROWN
EnumColor n GREEN
EnumColor o RED
EnumColor p BLACK
EnumCreatureType a MONSTER
EnumCreatureType b CREATURE
EnumCreatureType c AMBIENT
EnumCreatureType d WATER_CREATURE
EnumDifficulty a (I)LEnumDifficulty; getById
EnumDifficulty a PEACEFUL
EnumDifficulty b EASY
EnumDifficulty c NORMAL
EnumDifficulty d HARD
EnumDirection a (D)LEnumDirection; fromAngle
EnumDirection a DOWN
EnumDirection a (I)LEnumDirection; fromType1
EnumDirection b (I)LEnumDirection; fromType2
EnumDirection b UP
EnumDirection c NORTH
EnumDirection d ()LEnumDirection; opposite
EnumDirection d SOUTH
EnumDirection$EnumAxis a X
EnumDirection$EnumAxis b Y
EnumDirection$EnumAxis c Z
EnumDirection$EnumAxisDirection a POSITIVE
EnumDirection$EnumAxisDirection b NEGATIVE
EnumDirection$EnumDirectionLimit a HORIZONTAL
EnumDirection$EnumDirectionLimit b VERTICAL
EnumDirection e WEST
EnumDirection f EAST
EnumDirection g ()I getAdjacentX
EnumDirection h ()I getAdjacentY
EnumDirection i ()I getAdjacentZ
EnumItemRarity a COMMON
EnumItemRarity b UNCOMMON
EnumItemRarity c RARE
EnumItemRarity d EPIC
EnumMonsterType a UNDEFINED
EnumMonsterType b UNDEAD
EnumMonsterType c ARTHROPOD
EnumParticle a EXPLOSION_NORMAL
EnumParticle A FLAME
EnumParticle b EXPLOSION_LARGE
EnumParticle B LAVA
EnumParticle c EXPLOSION_HUGE
EnumParticle C FOOTSTEP
EnumParticle D CLOUD
EnumParticle d FIREWORKS_SPARK
EnumParticle E REDSTONE
EnumParticle e WATER_BUBBLE
EnumParticle F SNOWBALL
EnumParticle f WATER_SPLASH
EnumParticle G SNOW_SHOVEL
EnumParticle g WATER_WAKE
EnumParticle H SLIME
EnumParticle h SUSPENDED
EnumParticle I HEART
EnumParticle i SUSPENDED_DEPTH
EnumParticle J BARRIER
EnumParticle j CRIT
EnumParticle k CRIT_MAGIC
EnumParticle K ITEM_CRACK
EnumParticle L BLOCK_CRACK
EnumParticle l SMOKE_NORMAL
EnumParticle M BLOCK_DUST
EnumParticle m SMOKE_LARGE
EnumParticle n SPELL
EnumParticle N WATER_DROP
EnumParticle O ITEM_TAKE
EnumParticle o SPELL_INSTANT
EnumParticle P MOB_APPEARANCE
EnumParticle p SPELL_MOB
EnumParticle q SPELL_MOB_AMBIENT
EnumParticle r SPELL_WITCH
EnumParticle s DRIP_WATER
EnumParticle t DRIP_LAVA
EnumParticle u VILLAGER_ANGRY
EnumParticle v VILLAGER_HAPPY
EnumParticle w TOWN_AURA
EnumParticle x NOTE
EnumParticle y PORTAL
EnumParticle z ENCHANTMENT_TABLE
EnumProtocol a HANDSHAKING
EnumProtocol a ()I getProtocolId
EnumProtocol a (I)LEnumProtocol; isValidIntention
EnumProtocol a (LEnumProtocolDirection;I)LPacket; createPacket
EnumProtocol a (LPacket;)LEnumProtocol; getProtocolForPacket
EnumProtocol a (LPacket;)Ljava/lang/Integer; getPacketIdForPacket
EnumProtocol b PLAY
EnumProtocol c STATUS
EnumProtocolDirection a SERVERBOUND
EnumProtocolDirection b CLIENTBOUND
EnumProtocol d LOGIN
EnumProtocol h protocolMap
EnumProtocol i protocolId
EnumProtocol j packetMap
EnumSkyBlock a SKY
EnumSkyBlock b BLOCK
EnumWorldBorderState a GROWING
EnumWorldBorderState b SHRINKING
EnumWorldBorderState c STATIONARY
ExpirableListEntry c ()Ljava/util/Date; getExpires
ExpirableListEntry d ()Ljava/lang/String; getReason
Explosion c ()LEntityLiving; getSource
Explosion d ()V clearBlocks
Explosion d world
Explosion e ()Ljava/util/List; getBlocks
Explosion e posX
Explosion f posY
Explosion g posZ
Explosion h source
Explosion i size
Explosion j blocks
FoodMetaData a foodLevel
FoodMetaData a (IF)V eat
FoodMetaData a ()I getFoodLevel
FoodMetaData b saturationLevel
FoodMetaData c exhaustionLevel
FoodMetaData d foodTickTimer
FoodMetaData e ()F getSaturationLevel
GameProfileBanList a (Lcom/mojang/authlib/GameProfile;)Z isBanned
GameProfileSerializer a (LNBTTagCompound;)Lcom/mojang/authlib/GameProfile; deserialize
GameProfileSerializer a (LNBTTagCompound;Lcom/mojang/authlib/GameProfile;)LNBTTagCompound; serialize
GameRules a (Ljava/lang/String;)Ljava/lang/String; get
GameRules a (Ljava/lang/String;Ljava/lang/String;)V set
GameRules b ()[Ljava/lang/String; getGameRules
GameRules b (Ljava/lang/String;)Z getBoolean
GameRules e (Ljava/lang/String;)Z contains
GameRules$EnumGameRuleType a ANY_VALUE
GameRules$EnumGameRuleType b BOOLEAN_VALUE
GameRules$EnumGameRuleType c NUMERICAL_VALUE
GenericAttributes a maxHealth
GenericAttributes b FOLLOW_RANGE
GenericAttributes d MOVEMENT_SPEED
GenericAttributes e ATTACK_DAMAGE
GenLayerSpecial$EnumGenLayerSpecial a COOL_WARM
GenLayerSpecial$EnumGenLayerSpecial b HEAT_ICE
GenLayerSpecial$EnumGenLayerSpecial c SPECIAL
IAsyncTaskHandler aJ ()Z isMainThread
IAsyncTaskHandler a (Ljava/lang/Runnable;)Lcom/google/common/util/concurrent/ListenableFuture; postToMainThread
IAttribute a ()Ljava/lang/String; getName
IBlockAccess a (LBlockPosition;LEnumDirection;)I getBlockPower
IBlockAccess d (LBlockPosition;)Z isEmpty
IBlockAccess p (LBlockPosition;)LIBlockData; getType
IBlockAccess s (LBlockPosition;)LTileEntity; getTileEntity
IBlockData a (LIBlockState;Ljava/lang/Comparable;)LIBlockData; set
IBlockData b (LIBlockState;)Ljava/lang/Comparable; get
IBlockData c ()LBlock; getBlock
IChatBaseComponent a (LChatModifier;)LIChatBaseComponent; setChatModifier
IChatBaseComponent a (LIChatBaseComponent;)LIChatBaseComponent; addSibling
IChatBaseComponent b ()LChatModifier; getChatModifier
IChatBaseComponent e ()Ljava/lang/String; getText
IChunkProvider a (II)Z isChunkLoaded
IChunkProvider a (LBlockPosition;)LChunk; getChunkAt
IChunkProvider a (LChunk;II)V recreateStructures
IChunkProvider a (LEnumCreatureType;LBlockPosition;)Ljava/util/List; getMobsFor
IChunkProvider a (LIChunkProvider;II)V getChunkAt
IChunkProvider a (LWorld;Ljava/lang/String;LBlockPosition;)LBlockPosition; findNearestMapFeature
IChunkProvider a (ZLIProgressUpdate;)Z saveChunks
IChunkProvider d (II)LChunk; getOrCreateChunk
IChunkProvider d ()Z unloadChunks
IChunkProvider e ()Z canSave
IChunkProvider f ()Ljava/lang/String; getName
IChunkProvider g ()I getLoadedChunks
ICommand a (LICommandListener;[Ljava/lang/String;LBlockPosition;)Ljava/util/List; tabComplete
ICommand a (LICommandListener;[Ljava/lang/String;)V execute
ICommand a (LICommandListener;)Z canUse
ICommand b ([Ljava/lang/String;I)Z isListStart
ICommand c (LICommandListener;)Ljava/lang/String; getUsage
ICommand c ()Ljava/lang/String; getCommand
ICommandHandler a ()Ljava/util/Map; getCommands
ICommandListener a (LIChatBaseComponent;)V sendMessage
ICommandListener c ()LBlockPosition; getChunkCoordinates
ICommandListener e_ ()Ljava/lang/String; getName
ICommandListener e ()LWorld; getWorld
ICommandListener f_ ()LIChatBaseComponent; getScoreboardDisplayName
ICommandListener u_ ()Z getSendCommandFeedback
ICrafting a (LContainer;II)V setContainerData
ICrafting a (LContainer;LIInventory;)V setContainerData
IDataManager a (Ljava/lang/String;)Ljava/io/File; getDataFile
IDataManager a (LWorldData;LNBTTagCompound;)V saveWorldData
IDataManager a (LWorldData;)V saveWorldData
IDataManager a (LWorldProvider;)LIChunkLoader; createChunkLoader
IDataManager b ()Ljava/io/File; getDirectory
IDataManager c ()V checkSession
IDataManager d ()LWorldData; getWorldData
IDataManager e ()LIPlayerFileData; getPlayerFileData
IDispenseBehavior a(LISourceBlock;LItemStack;)LItemStack; dispense
IDispenseBehavior a NONE
IHopper z ()LWorld; getWorld
IInventory a_ (I)I getProperty
IInventory a (II)LItemStack; splitStack
IInventory a (I)LItemStack; getItem
IInventory a (ILItemStack;)V setItem
IInventory b (I)LItemStack; splitWithoutUpdate
IInventory b (LEntityHuman;)V startOpen
IInventory c (LEntityHuman;)V closeContainer
IInventory o_ ()I getSize
IInventory p_ ()V update
IInventory q_ ()I getMaxStackSize
IMerchant b_ (LEntityHuman;)LMerchantRecipeList; getOffers
IMerchant f_ ()LIChatBaseComponent; getScoreboardDisplayName
IMinecraftServer a_ (Ljava/lang/String;)Ljava/lang/String; executeRemoteCommand
IMinecraftServer d_ ()Ljava/lang/String; getPlugins
IMinecraftServer e (Ljava/lang/String;)V info
IMinecraftServer f (Ljava/lang/String;)V warning
IMinecraftServer H ()Ljava/lang/String; getVersion
IMinecraftServer K ()[Ljava/lang/String; getPlayers
IMinecraftServer M ()Z isDebugging
IMojangStatistics ad ()Z getSnooperEnabled
INamable l ()Ljava/lang/String; getName
INamableTileEntity e_ ()Ljava/lang/String; getName
INamableTileEntity f_ ()LIChatBaseComponent; getScoreboardDisplayName
INamableTileEntity l_ ()Z hasCustomName
IntHashMap a (I)Ljava/lang/Object; get
InventoryCrafting a items
InventoryCraftResult a items
InventoryLargeChest b left
InventoryLargeChest c right
InventoryMerchant a merchant
InventoryMerchant b itemsInSlots
InventoryMerchant c player
InventoryMerchant d recipe
InventoryMerchant i ()LMerchantRecipe; getRecipe
InventorySubcontainer c items
InventorySubcontainer p_ ()V update
InventorySubcontainer q_ ()I getMaxStackSize
InventoryUtils a (LWorld;DDDLIInventory;)V dropInventory
InventoryUtils a (LWorld;DDDLItemStack;)V dropItem
InventoryUtils a (LWorld;LBlockPosition;LIInventory;)V dropInventory
InventoryUtils a (LWorld;LEntity;LIInventory;)V dropEntity
IpBanList a (Ljava/net/SocketAddress;)Z isBanned
IpBanList b (Ljava/net/SocketAddress;)LIpBanEntry; get
IPlayerFileData a (LEntityHuman;)V save
IPlayerFileData b (LEntityHuman;)LNBTTagCompound; load
IPlayerFileData f ()[Ljava/lang/String; getSeenPlayers
IPosition a ()D getX
IPosition b ()D getY
IPosition c ()D getZ
IProjectile c (DDDFF)V shoot
IRecipe a (LInventoryCrafting;)LItemStack; craftItem
IScoreboardCriteria a criteria
IScoreboardCriteria a ()Ljava/lang/String; getName
IScoreboardCriteria a (Ljava/util/List;)I getScoreModifier
IScoreboardCriteria b ()Z isReadOnly
IScoreboardCriteria$EnumScoreboardHealthDisplay a INTEGER
IScoreboardCriteria$EnumScoreboardHealthDisplay b HEARTS
ISourceBlock d ()LBlockPosition; getBlockPosition
ISourceBlock h ()LTileEntity; getTileEntity
ISource i ()LWorld; getWorld
Item a (I)I filterData
Item a (LBlock;)LItem; getItemOf
Item a (LItemStack;LBlock;)F getDestroySpeed
Item a (LItemStack;LEntityHuman;LWorld;LBlockPosition;LEnumDirection;FFF)Z interactWith
Item a ()Ljava/lang/String; getName
ItemArmor$EnumArmorMaterial a LEATHER
ItemArmor$EnumArmorMaterial b CHAIN
ItemArmor$EnumArmorMaterial c IRON
ItemArmor$EnumArmorMaterial d GOLD
ItemArmor$EnumArmorMaterial e DIAMOND
Item b (I)LItem; getById
Item b (LBlock;)Z canDestroySpecialBlock
Item b (LItem;)I getId
ItemBlock a (LItemStack;LEntityHuman;LWorld;LBlockPosition;LEnumDirection;FFF)Z interactWith
Item c durability
Item d craftingResult
Item d (I)LItem; setMaxDurability
Item$EnumToolMaterial a WOOD
Item$EnumToolMaterial b STONE
Item$EnumToolMaterial c IRON
Item$EnumToolMaterial d EMERALD
Item$EnumToolMaterial e GOLD
Item e REGISTRY
ItemFish$EnumFish a COD
ItemFish$EnumFish b SALMON
ItemFish$EnumFish c CLOWNFISH
ItemFish$EnumFish d PUFFERFISH
ItemFood h (LItemStack;)I getNutrition
ItemFood i (LItemStack;)F getSaturationModifier
Item h maxStackSize
Item j ()I getMaxStackSize
Item l ()I getMaxDurability
Item l name
ItemMultiTexture a (I)I filterData
Item m ()Z usesDurability
Items aa IRON_LEGGINGS
Items aA SADDLE
Items ab IRON_BOOTS
Items aB IRON_DOOR
Items ac DIAMOND_HELMET
Items aC REDSTONE
Items ad DIAMOND_CHESTPLATE
Items aD SNOWBALL
Items aE BOAT
Items ae DIAMOND_LEGGINGS
Items af DIAMOND_BOOTS
Items aF LEATHER
Items ag GOLDEN_HELMET
Items aG MILK_BUCKET
Items aH BRICK
Items ah GOLDEN_CHESTPLATE
Items aI CLAY_BALL
Items ai GOLDEN_LEGGINGS
Items a IRON_SHOVEL
Items aj GOLDEN_BOOTS
Items aJ REEDS
Items ak FLINT
Items aK PAPER
Items aL BOOK
Items a (Ljava/lang/String;)LItem; get
Items al PORKCHOP
Items am COOKED_PORKCHOP
Items aM SLIME
Items A MUSHROOM_STEW
Items aN CHEST_MINECART
Items an PAINTING
Items aO FURNACE_MINECART
Items ao GOLDEN_APPLE
Items aP EGG
Items ap SIGN
Items aQ COMPASS
Items aq WOODEN_DOOR
Items aR FISHING_ROD
Items ar SPRUCE_DOOR
Items as BIRCH_DOOR
Items aS CLOCK
Items aT GLOWSTONE_DUST
Items at JUNGLE_DOOR
Items au ACACIA_DOOR
Items aU FISH
Items aV COOKED_FISH
Items av DARK_OAK_DOOR
Items aw BUCKET
Items aW DYE
Items aX BONE
Items ax WATER_BUCKET
Items ay LAVA_BUCKET
Items aY SUGAR
Items aZ CAKE
Items az MINECART
Items ba BED
Items bA GLASS_BOTTLE
Items bb REPEATER
Items bB SPIDER_EYE
Items bc COOKIE
Items bC FERMENTED_SPIDER_EYE
Items bD BLAZE_POWDER
Items bd FILLED_MAP
Items bE MAGMA_CREAM
Items be SHEARS
Items bF BREWING_STAND
Items bf MELON
Items bG CAULDRON
Items B GOLDEN_SWORD
Items bg PUMPKIN_SEEDS
Items bH ENDER_EYE
Items bh MELON_SEEDS
Items bi BEEF
Items b IRON_PICKAXE
Items bI SPECKLED_MELON
Items bj COOKED_BEEF
Items bJ SPAWN_EGG
Items bk CHICKEN
Items bK EXPERIENCE_BOTTLE
Items bl COOKED_CHICKEN
Items bL FIRE_CHARGE
Items bm MUTTON
Items bM WRITABLE_BOOK
Items bn COOKED_MUTTON
Items bN WRITTEN_BOOK
Items bO EMERALD
Items bo RABBIT
Items bp COOKED_RABBIT
Items bP ITEM_FRAME
Items bQ FLOWER_POT
Items bq RABBIT_STEW
Items bR CARROT
Items br RABBIT_FOOT
Items bS POTATO
Items bs RABBIT_HIDE
Items bT BAKED_POTATO
Items bt ROTTEN_FLESH
Items bu ENDER_PEARL
Items bU POISONOUS_POTATO
Items bv BLAZE_ROD
Items bV MAP
Items bw GHAST_TEAR
Items bW GOLDEN_CARROT
Items bx GOLD_NUGGET
Items bX SKULL
Items bY CARROT_ON_A_STICK
Items by NETHER_WART
Items bZ NETHER_STAR
Items bz POTION
Items ca PUMPKIN_PIE
Items cA RECORD_11
Items cb FIREWORKS
Items cB RECORD_WAIT
Items cc FIREWORK_CHARGE
Items cC PRISMARINE_SHARD
Items cd ENCHANTED_BOOK
Items cD PRISMARINE_CRYSTALS
Items cE BANNER
Items ce COMPARATOR
Items cf NETHERBRICK
Items C GOLDEN_SHOVEL
Items cg QUARTZ
Items ch TNT_MINECART
Items ci HOPPER_MINECART
Items c IRON_AXE
Items cj ARMOR_STAND
Items ck IRON_HORSE_ARMOR
Items cl GOLDEN_HORSE_ARMOR
Items cm DIAMOND_HORSE_ARMOR
Items cn LEAD
Items co NAME_TAG
Items cp COMMAND_BLOCK_MINECART
Items cq RECORD_13
Items cr RECORD_CAT
Items cs RECORD_BLOCKS
Items ct RECORD_CHIRP
Items cu RECORD_FAR
Items cv RECORD_MALL
Items cw RECORD_MELLOHI
Items cx RECORD_STAL
Items cy RECORD_STRAD
Items cz RECORD_WARD
Items d FLINT_AND_STEEL
Items D GOLDEN_PICKAXE
Items e APPLE
Items E GOLDEN_AXE
Items f BOW
Items F STRING
Items g ARROW
Items G FEATHER
Items h COAL
Items H GUNPOWDER
Items i DIAMOND
Items I WOODEN_HOE
Items j IRON_INGOT
Items J STONE_HOE
Items k GOLD_INGOT
Items K IRON_HOE
Items L DIAMOND_HOE
Items l IRON_SWORD
Items M GOLDEN_HOE
Items m WOODEN_SWORD
Items N WHEAT_SEEDS
Items n WOODEN_SHOVEL
Items O WHEAT
Items o WOODEN_PICKAXE
Items P BREAD
Items p WOODEN_AXE
Items Q LEATHER_HELMET
Items q STONE_SWORD
Items R LEATHER_CHESTPLATE
Items r STONE_SHOVEL
Items S LEATHER_LEGGINGS
Items s STONE_PICKAXE
ItemStack A ()I getRepairCost
ItemStack a (ILEntityLiving;)V damage
ItemStack a (I)LItemStack; cloneAndSubtract
ItemStack a (ILjava/util/Random;)Z isDamaged
ItemStack a (LEnchantment;I)V addEnchantment
ItemStack a (LEntityHuman;LWorld;LBlockPosition;LEnumDirection;FFF)Z placeItem
ItemStack a (LItemStack;LItemStack;)Z equals
ItemStack a (LItemStack;)Z doMaterialsMatch
ItemStack a (LItem;)V setItem
ItemStack a (LNBTTagCompound;)LItemStack; createStack
ItemStack b count
ItemStack b (I)V setData
ItemStack b ()LItem; getItem
ItemStack b (LItemStack;LItemStack;)Z matches
ItemStack b (LNBTTagCompound;)LNBTTagCompound; save
ItemStack c ()I getMaxStackSize
ItemStack c (I)V setRepairCost
ItemStack d item
ItemStack d (LNBTTagCompound;)V setTag
ItemStack d ()Z isStackable
ItemStack e tag
ItemStack f damage
ItemStack f ()Z usesData
ItemStack i ()I getData
ItemStack k ()LItemStack; cloneItemStack
ItemStack n ()Z hasTag
ItemStack o ()LNBTTagCompound; getTag
ItemStack p ()LNBTTagList; getEnchantments
ItemStack q ()Ljava/lang/String; getName
ItemStack s ()Z hasName
ItemStack w ()Z hasEnchantments
Items T LEATHER_BOOTS
Items t STONE_AXE
Items U CHAINMAIL_HELMET
Items u DIAMOND_SWORD
Items V CHAINMAIL_CHESTPLATE
Items v DIAMOND_SHOVEL
Items W CHAINMAIL_LEGGINGS
Items w DIAMOND_PICKAXE
Items X CHAINMAIL_BOOTS
Items x DIAMOND_AXE
Items Y IRON_HELMET
Items y STICK
Items z BOWL
Items Z IRON_CHESTPLATE
ItemWorldMap a (LItemStack;LWorld;)LWorldMap; getSavedMap
ITileEntityContainer a (LPlayerInventory;LEntityHuman;)LContainer; createContainer
ITileEntityContainer k ()Ljava/lang/String; getContainerName
IWorldInventory a (ILItemStack;LEnumDirection;)Z canPlaceItemThroughFace
IWorldInventory a (LEnumDirection;)[I getSlotsForFace
IWorldInventory b (ILItemStack;LEnumDirection;)Z canTakeItemThroughFace
JsonList a ()[Ljava/lang/String; getEntries
JsonList a (LJsonListEntry;)V add
JsonList b (Ljava/lang/Object;)LJsonListEntry; get
JsonList b ()Z isEnabled
JsonList c (Ljava/lang/Object;)V remove
JsonList d ()Z isEmpty
JsonListEntry e ()Z hasExpired
JsonListEntry f ()Ljava/lang/Object; getKey
JsonList f ()V save
JsonList g ()V load
LazyInitVar b ()Ljava/lang/Object; init
LocaleI18n a (Ljava/lang/String;)Ljava/lang/String; get
LoginListener a (Ljava/lang/String;)V disconnect
LoginListener a networkManager
LoginListener d (LLoginListener;)Ljavax/crypto/SecretKey; d
LoginListener d random
LoginListener$EnumProtocolState a HELLO
LoginListener$EnumProtocolState b KEY
LoginListener$EnumProtocolState c AUTHENTICATING
LoginListener$EnumProtocolState d READY_TO_ACCEPT
LoginListener$EnumProtocolState f ACCEPTED
LoginListener f server
LoginListener k loginKey
LongHashMap a entries
LongHashMap a ()I count
LongHashMap a (J)Ljava/lang/Object; getEntry
LongHashMap a (JLjava/lang/Object;)V put
LongHashMap b count
LongHashMap b (J)Z contains
LongHashMap d (J)Ljava/lang/Object; remove
MapIcon a ()B getType
MapIcon a type
MapIcon b ()B getX
MapIcon b x
MapIcon c ()B getY
MapIcon c y
MapIcon d ()B getRotation
MapIcon d rotation
Material a AIR
Material A CACTUS
Material a ()Z isBuildable
Material B CLAY
Material b GRASS
Material b ()Z blocksLight
Material c EARTH
Material C PUMPKIN
Material c ()Z isSolid
Material D DRAGON_EGG
Material d WOOD
Material d ()Z isLiquid
Material E PORTAL
Material e STONE
Material F CAKE
Material f ORE
Material g HEAVY
Material G WEB
Material H PISTON
Material h WATER
Material h ()Z isBurnable
Material I BANNER
Material i LAVA
Material J canBurn
Material j LEAVES
Material j ()Z isReplaceable
Material k PLANT
Material l REPLACEABLE_PLANT
Material l ()Z isAlwaysDestroyable
Material m ()I getPushReaction
Material m SPONGE
Material n CLOTH
Material o FIRE
Material p SAND
Material q ORIENTABLE
Material r WOOL
Material s SHATTERABLE
Material t BUILDABLE_GLASS
Material u TNT
Material v CORAL
Material w ICE
Material x SNOW_LAYER
Material y PACKED_ICE
Material z SNOW_BLOCK
MathHelper a (D)F sqrt
MathHelper a (F)F sin
MathHelper a (III)I clamp
MathHelper a (Ljava/util/Random;II)I nextInt
MathHelper b (F)F cos
MathHelper c (D)I floor
MerchantRecipe a buyingItem1
MerchantRecipe a ()LItemStack; getBuyItem1
MerchantRecipe b buyingItem2
MerchantRecipe b ()LItemStack; getBuyItem2
MerchantRecipe c sellingItem
MerchantRecipe c ()Z hasSecondItem
MerchantRecipe d ()LItemStack; getBuyItem3
MerchantRecipe d uses
MerchantRecipe e maxUses
MerchantRecipe f rewardExp
MinecraftEncryption a (ILjava/lang/String;Ljava/security/Key;)Ljavax/crypto/Cipher; a
MinecraftEncryption a (ILjava/security/Key;)Ljavax/crypto/Cipher; a
MinecraftEncryption a (Ljava/lang/String;Ljava/security/PublicKey;Ljavax/crypto/SecretKey;)[B a
MinecraftEncryption a (Ljava/security/PrivateKey;[B)Ljavax/crypto/SecretKey; a
MobEffect a ()I getEffectId
MobEffect a (LEntityLiving;)Z tick
MobEffect a (Z)V setSplash
MobEffect b effectId
MobEffect b ()I getDuration
MobEffect c duration
MobEffect c ()I getAmplifier
MobEffect d amplification
MobEffect e splash
MobEffect e ()Z isAmbient
MobEffect f ambient
MobEffect f ()Z isShowParticles
MobEffect h particles
MobEffectList a byId
MobEffectList a (LEntity;LEntity;LEntityLiving;ID)V applyInstantEffect
MobEffectList a (LEntityLiving;I)V tick
MobEffectList b ()Z isInstant
MobEffectList c FASTER_MOVEMENT
MobEffectList d ()I getId
MobEffectList d SLOWER_MOVEMENT
MobEffectList e FASTER_DIG
MobEffectList f SLOWER_DIG
MobEffectList g INCREASE_DAMAGE
MobEffectList h ()D getDurationModifier
MobEffectList h HEAL
MobEffectList H id
MobEffectList i HARM
MobEffectList j JUMP
MobEffectList k CONFUSION
MobEffectList l REGENERATION
MobEffectList m RESISTANCE
MobEffectList n FIRE_RESISTANCE
MobEffectList o WATER_BREATHING
MobEffectList p INVISIBILITY
MobEffectList q BLINDNESS
MobEffectList r NIGHT_VISION
MobEffectList s HUNGER
MobEffectList t WEAKNESS
MobEffectList u POISON
MobEffectList v WITHER
MobEffectList w HEALTH_BOOST
MobEffectList x ABSORBTION
MobEffectList y SATURATION
MobSpawnerAbstract a (Ljava/lang/String;)V setMobName
MobSpawnerAbstract a spawnDelay
MobSpawnerAbstract b mobName
MobSpawnerAbstract c mobs
MobSpawnerAbstract d spawnData
MobSpawnerAbstract f ()Ljava/lang/String; getMobName
MobSpawnerAbstract g minSpawnDelay
MobSpawnerAbstract h maxSpawnDelay
MobSpawnerAbstract i spawnCount
MobSpawnerAbstract k maxNearbyEntities
MobSpawnerAbstract l requiredPlayerRange
MobSpawnerAbstract m spawnRange
MojangsonParser a (Ljava/lang/String;)LNBTTagCompound; parse
MovingObjectPosition a type
MovingObjectPosition b direction
MovingObjectPosition c pos
MovingObjectPosition d entity
MovingObjectPosition$EnumMovingObjectType a MISS
MovingObjectPosition$EnumMovingObjectType b BLOCK
MovingObjectPosition$EnumMovingObjectType c ENTITY
NBTBase a ()B getTypeId
NBTBase a (B)LNBTBase; createTag
NBTBase a (Ljava/io/DataInput;ILNBTReadLimiter;)V load
NBTBase a (Ljava/io/DataOutput;)V write
NBTBase b ()LNBTBase; clone
NBTBase c_ ()Z isEmpty
NBTTagByteArray b data
NBTTagByte b data
NBTTagCompound a (Ljava/lang/String;B)V setByte
NBTTagCompound a (Ljava/lang/String;[B)V setByteArray
NBTTagCompound a (Ljava/lang/String;D)V setDouble
NBTTagCompound a (Ljava/lang/String;F)V setFloat
NBTTagCompound a (Ljava/lang/String;I)V setInt
NBTTagCompound a (Ljava/lang/String;[I)V setIntArray
NBTTagCompound a (Ljava/lang/String;J)V setLong
NBTTagCompound a (Ljava/lang/String;Ljava/lang/String;)V setString
NBTTagCompound a (Ljava/lang/String;)LNBTBase; get
NBTTagCompound a (Ljava/lang/String;LNBTBase;)V set
NBTTagCompound a (Ljava/lang/String;S)V setShort
NBTTagCompound a (Ljava/lang/String;Z)V setBoolean
NBTTagCompound b (Ljava/lang/String;I)Z hasKeyOfType
NBTTagCompound b map
NBTTagCompound c (Ljava/lang/String;I)LNBTTagList; getList
NBTTagCompound c (Ljava/lang/String;)Z hasKey
NBTTagCompound d (Ljava/lang/String;)B getByte
NBTTagCompound e (Ljava/lang/String;)S getShort
NBTTagCompound f (Ljava/lang/String;)I getInt
NBTTagCompound g (Ljava/lang/String;)J getLong
NBTTagCompound h (Ljava/lang/String;)F getFloat
NBTTagCompound i (Ljava/lang/String;)D getDouble
NBTTagCompound j (Ljava/lang/String;)Ljava/lang/String; getString
NBTTagCompound k (Ljava/lang/String;)[B getByteArray
NBTTagCompound l (Ljava/lang/String;)[I getIntArray
NBTTagCompound m (Ljava/lang/String;)LNBTTagCompound; getCompound
NBTTagCompound n (Ljava/lang/String;)Z getBoolean
NBTTagCompound o (Ljava/lang/String;)V remove
NBTTagDouble b data
NBTTagFloat b data
NBTTagIntArray b data
NBTTagInt b data
NBTTagList a (LNBTBase;)V add
NBTTagList b (I)LNBTTagCompound; get
NBTTagList c ()I size
NBTTagList c list
NBTTagList d type
NBTTagList f (I)Ljava/lang/String; getString
NBTTagLong b data
NBTTagShort b data
NBTTagString b data
net/minecraft/server/MinecraftServer aA ()I getIdleTimeout
net/minecraft/server/MinecraftServer aa serverThread
net/minecraft/server/MinecraftServer ab ()Ljava/lang/String; getResourcePack
net/minecraft/server/MinecraftServer ac ()Ljava/lang/String; getResourcePackHash
net/minecraft/server/MinecraftServer ad ()Z getSnooperEnabled
net/minecraft/server/MinecraftServer aE ()Lcom/mojang/authlib/GameProfileRepository; getGameProfileRepository
net/minecraft/server/MinecraftServer aF ()LUserCache; getUserCache
net/minecraft/server/MinecraftServer af ()Z getOnlineMode
net/minecraft/server/MinecraftServer ag ()Z getSpawnAnimals
net/minecraft/server/MinecraftServer ah ()Z getSpawnNPCs
net/minecraft/server/MinecraftServer a (I)LWorldServer; getWorldServer
net/minecraft/server/MinecraftServer aj ()Z getPVP
net/minecraft/server/MinecraftServer ak ()Z getAllowFlight
net/minecraft/server/MinecraftServer a (LICommandListener;Ljava/lang/String;LBlockPosition;)Ljava/util/List; tabCompleteCommand
net/minecraft/server/MinecraftServer a_ (Ljava/lang/String;Ljava/lang/String;)V setResourcePack
net/minecraft/server/MinecraftServer a (LWorldSettings$EnumGamemode;)V setGamemode
net/minecraft/server/MinecraftServer al ()Z getEnableCommandBlock
net/minecraft/server/MinecraftServer am ()Ljava/lang/String; getMotd
net/minecraft/server/MinecraftServer an ()I getMaxBuildHeight
net/minecraft/server/MinecraftServer aN ()Lorg/apache/logging/log4j/Logger; getLogger
net/minecraft/server/MinecraftServer ao ()Z isStopped
net/minecraft/server/MinecraftServer ap ()LPlayerList; getPlayerList
net/minecraft/server/MinecraftServer A spawnAnimals
net/minecraft/server/MinecraftServer aw ()I getSpawnProtection
net/minecraft/server/MinecraftServer ax ()Z getForceGamemode
net/minecraft/server/MinecraftServer a (Z)V saveChunks
net/minecraft/server/MinecraftServer b (I)V setPort
net/minecraft/server/MinecraftServer B spawnNPCs
net/minecraft/server/MinecraftServer c methodProfiler
net/minecraft/server/MinecraftServer C pvpMode
net/minecraft/server/MinecraftServer C ()Z getAllowNether
net/minecraft/server/MinecraftServer D allowFlight
net/minecraft/server/MinecraftServer d (I)V setIdleTimeout
net/minecraft/server/MinecraftServer d worldServer
net/minecraft/server/MinecraftServer d (Z)V setOnlineMode
net/minecraft/server/MinecraftServer e (Ljava/lang/String;)V info
net/minecraft/server/MinecraftServer E motd
net/minecraft/server/MinecraftServer e (Z)V setSpawnAnimals
net/minecraft/server/MinecraftServer f (Ljava/lang/String;)V warning
net/minecraft/server/MinecraftServer f (Z)V setSpawnNPCs
net/minecraft/server/MinecraftServer g (Z)V setPVP
net/minecraft/server/MinecraftServer H ()Ljava/lang/String; getVersion
net/minecraft/server/MinecraftServer h (Z)V setAllowFlight
net/minecraft/server/MinecraftServer i ()Z init
net/minecraft/server/MinecraftServer i (Z)V setForceGamemode
net/minecraft/server/MinecraftServer j (Ljava/lang/String;)V setWorld
net/minecraft/server/MinecraftServer K ()[Ljava/lang/String; getPlayers
net/minecraft/server/MinecraftServer k LOGGER
net/minecraft/server/MinecraftServer L demoMode
net/minecraft/server/MinecraftServer l (Ljava/lang/String;)V setMotd
net/minecraft/server/MinecraftServer l ()Z getGenerateStructures
net/minecraft/server/MinecraftServer m convertable
net/minecraft/server/MinecraftServer m ()LWorldSettings$EnumGamemode; getGamemode
net/minecraft/server/MinecraftServer M ()Z isDebugging
net/minecraft/server/MinecraftServer n ()LEnumDifficulty; getDifficulty
net/minecraft/server/MinecraftServer N ()Lnet/minecraft/server/MinecraftServer; getServer
net/minecraft/server/MinecraftServer o universe
net/minecraft/server/MinecraftServer o ()Z isHardcore
net/minecraft/server/MinecraftServer P ()LICommandHandler; getCommandHandler
net/minecraft/server/MinecraftServer t serverIp
net/minecraft/server/MinecraftServer t ()V stop
net/minecraft/server/MinecraftServer u ()Ljava/lang/String; getServerIp
net/minecraft/server/MinecraftServer u port
net/minecraft/server/MinecraftServer v ()Z isRunning
net/minecraft/server/MinecraftServer w isRunning
net/minecraft/server/MinecraftServer w ()V safeShutdown
net/minecraft/server/MinecraftServer W ()Z getSpawnMonsters
net/minecraft/server/MinecraftServer x isStopped
net/minecraft/server/MinecraftServer Y ()LConvertable; getConvertable
net/minecraft/server/MinecraftServer y ticks
net/minecraft/server/MinecraftServer z onlineMode
NetworkManager a (I)V setupCompression
NetworkManager a (LIChatBaseComponent;)V close
NetworkManager a (Ljavax/crypto/SecretKey;)V setEncryptionKey
NetworkManager a (LPacket;)V handle
NetworkManager b ()Ljava/net/SocketAddress; getSocketAddress
NetworkManager i ()LPacketListener; getPacketListener
NetworkManager k channel
NetworkManager o encrypted
NetworkManager p isDisconnectionHandled
PacketCompressor a encodeBuf
PacketCompressor a (I)V setThreshold
PacketCompressor a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encode
PacketCompressor b deflater
PacketCompressor c threshold
PacketDecompressor a inflater
PacketDecompressor a (I)V setThreshold
PacketDecompressor b threshold
PacketDecrypter a cipher
PacketDecrypter a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V decode
PacketEncrypter a cipher
PacketEncrypter a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encode
PacketEncryptionHandler a cipher
PacketEncryptionHandler a (Lio/netty/buffer/ByteBuf;)[B bufToByte
PacketEncryptionHandler a (Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encipher
PacketEncryptionHandler a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf; decipher
PacketEncryptionHandler b heapIn
PacketEncryptionHandler c heapOut
PacketHandshakingInSetProtocol b hostname
PacketHandshakingInSetProtocol c port
PacketLoginInEncryptionBegin a (Ljava/security/PrivateKey;)Ljavax/crypto/SecretKey; a
PacketPlayInAbilities b ()Z isFlying
PacketPlayInBlockDig$EnumPlayerDigType a START_DESTROY_BLOCK
PacketPlayInBlockDig$EnumPlayerDigType b ABORT_DESTROY_BLOCK
PacketPlayInBlockDig$EnumPlayerDigType c STOP_DESTROY_BLOCK
PacketPlayInBlockDig$EnumPlayerDigType d DROP_ALL_ITEMS
PacketPlayInBlockDig$EnumPlayerDigType e DROP_ITEM
PacketPlayInBlockDig$EnumPlayerDigType f RELEASE_USE_ITEM
PacketPlayInBlockPlace b ()I getFace
PacketPlayInBlockPlace c ()LItemStack; getItemStack
PacketPlayInClientCommand$EnumClientCommand a PERFORM_RESPAWN
PacketPlayInClientCommand$EnumClientCommand b REQUEST_STATS
PacketPlayInClientCommand$EnumClientCommand c OPEN_INVENTORY_ACHIEVEMENT
PacketPlayInCloseWindow a id
PacketPlayInEntityAction b animation
PacketPlayInEntityAction$EnumPlayerAction a START_SNEAKING
PacketPlayInEntityAction$EnumPlayerAction b STOP_SNEAKING
PacketPlayInEntityAction$EnumPlayerAction c STOP_SLEEPING
PacketPlayInEntityAction$EnumPlayerAction d START_SPRINTING
PacketPlayInEntityAction$EnumPlayerAction e STOP_SPRINTING
PacketPlayInEntityAction$EnumPlayerAction f RIDING_JUMP
PacketPlayInEntityAction$EnumPlayerAction g OPEN_INVENTORY
PacketPlayInFlying a x
PacketPlayInFlying b y
PacketPlayInFlying c z
PacketPlayInFlying d yaw
PacketPlayInFlying e pitch
PacketPlayInFlying g hasPos
PacketPlayInFlying h hasLook
PacketPlayInHeldItemSlot a itemInHandIndex
PacketPlayInResourcePackStatus$EnumResourcePackStatus a SUCCESSFULLY_LOADED
PacketPlayInResourcePackStatus$EnumResourcePackStatus b DECLINED
PacketPlayInResourcePackStatus$EnumResourcePackStatus c FAILED_DOWNLOAD
PacketPlayInResourcePackStatus$EnumResourcePackStatus d ACCEPTED
PacketPlayInSetCreativeSlot a slot
PacketPlayInSetCreativeSlot b ()LItemStack; getItemStack
PacketPlayInUseEntity b action
PacketPlayInUseEntity$EnumEntityUseAction a INTERACT
PacketPlayInUseEntity$EnumEntityUseAction b ATTACK
PacketPlayInUseEntity$EnumEntityUseAction c INTERACT_AT
PacketPlayInWindowClick b slot
PacketPlayInWindowClick c button
PacketPlayInWindowClick e item
PacketPlayInWindowClick f shift
PacketPlayOutBlockChange b block
PacketPlayOutCombatEvent$EnumCombatEventType a ENTER_COMBAT
PacketPlayOutCombatEvent$EnumCombatEventType b END_COMBAT
PacketPlayOutCombatEvent$EnumCombatEventType c ENTITY_DIED
PacketPlayOutPlayerInfo$EnumPlayerInfoAction a ADD_PLAYER
PacketPlayOutPlayerInfo$EnumPlayerInfoAction b UPDATE_GAME_MODE
PacketPlayOutPlayerInfo$EnumPlayerInfoAction c UPDATE_LATENCY
PacketPlayOutPlayerInfo$EnumPlayerInfoAction d UPDATE_DISPLAY_NAME
PacketPlayOutPlayerInfo$EnumPlayerInfoAction e REMOVE_PLAYER
PacketPlayOutPosition$EnumPlayerTeleportFlags a X
PacketPlayOutPosition$EnumPlayerTeleportFlags b Y
PacketPlayOutPosition$EnumPlayerTeleportFlags c Z
PacketPlayOutPosition$EnumPlayerTeleportFlags d Y_ROT
PacketPlayOutPosition$EnumPlayerTeleportFlags e X_ROT
PacketPlayOutScoreboardScore$EnumScoreboardAction a CHANGE
PacketPlayOutScoreboardScore$EnumScoreboardAction b REMOVE
PacketPlayOutSpawnPosition a position
PacketPlayOutTitle$EnumTitleAction a TITLE
PacketPlayOutTitle$EnumTitleAction b SUBTITLE
PacketPlayOutTitle$EnumTitleAction c TIMES
PacketPlayOutTitle$EnumTitleAction d CLEAR
PacketPlayOutTitle$EnumTitleAction e RESET
PacketPlayOutWorldBorder$EnumWorldBorderAction a SET_SIZE
PacketPlayOutWorldBorder$EnumWorldBorderAction b LERP_SIZE
PacketPlayOutWorldBorder$EnumWorldBorderAction c SET_CENTER
PacketPlayOutWorldBorder$EnumWorldBorderAction d INITIALIZE
PacketPlayOutWorldBorder$EnumWorldBorderAction e SET_WARNING_TIME
PacketPlayOutWorldBorder$EnumWorldBorderAction f SET_WARNING_BLOCKS
PacketStatusListener b minecraftServer
PacketStatusListener c networkManager
PathfinderGoalRandomStroll b (I)V setTimeBetweenMovement
PathfinderGoalSit a entity
PathfinderGoalSit a (Z)V setSitting
PathfinderGoalSit b willSit
PathfinderGoalTame a entity
PersistentBase a id
PersistentCollection a (Ljava/lang/Class;Ljava/lang/String;)LPersistentBase; get
PersistentVillage a (LBlockPosition;I)LVillage; getClosestVillage
PersistentVillage a ()V tick
PersistentVillage b ()Ljava/util/List; getVillages
PersistentVillage b world
PersistentVillage e villages
PersistentVillage f time
PistonExtendsChecker c ()Ljava/util/List; getMovedBlocks
PistonExtendsChecker d ()Ljava/util/List; getBrokenBlocks
PlayerAbilities a isInvulnerable
PlayerAbilities b isFlying
PlayerAbilities c canFly
PlayerAbilities d canInstantlyBuild
PlayerAbilities e mayBuild
PlayerAbilities f flySpeed
PlayerAbilities g walkSpeed
PlayerChunkMap a (LBlockPosition;)V flagDirty
PlayerChunkMap a (LEntityPlayer;)V addPlayer
PlayerChunkMap b (I)I getFurthestViewableBlock
PlayerChunkMap b ()V flush
PlayerChunkMap b world
PlayerChunkMap c (LEntityPlayer;)V removePlayer
PlayerChunkMap c managedPlayers
PlayerChunkMap d (LEntityPlayer;)V movePlayer
PlayerChunkMap$PlayerChunk a playerChunkMap
PlayerChunkMap$PlayerChunk c location
PlayerChunkMap$PlayerChunk d dirtyBlocks
PlayerChunkMap$PlayerChunk e dirtyCount
PlayerConnection a ()LNetworkManager; getNetworkManager
PlayerConnection a (LPacket;)V sendPacket
PlayerConnection a networkManager
PlayerConnection b player
PlayerConnection c (Ljava/lang/String;)V disconnect
PlayerConnection d ()J getCurrentMillis
PlayerConnection d (Ljava/lang/String;)V handleCommand
PlayerConnection d minecraftServer
PlayerConnection i keepAliveID
PlayerConnection j lastPing
PlayerConnection l chatThrottle
PlayerConnection r checkMovement
PlayerConnectionUtils a (LPacket;LPacketListener;LIAsyncTaskHandler;)V ensureMainThread
PlayerInteractManager a (LEntityHuman;LWorld;LItemStack;LBlockPosition;LEnumDirection;FFF)Z interact
PlayerInteractManager a (LEntityHuman;LWorld;LItemStack;)Z useItem
PlayerInteractManager a (LWorldSettings$EnumGamemode;)V setGameMode
PlayerInteractManager a world
PlayerInteractManager b (LBlockPosition;)Z breakBlock
PlayerInteractManager b ()LWorldSettings$EnumGamemode; getGameMode
PlayerInteractManager b player
PlayerInteractManager c gamemode
PlayerInteractManager d ()Z isCreative
PlayerInteractManager e lastDigTick
PlayerInteractManager g currentTick
PlayerInventory a items
PlayerInventory a (LItemStack;)Z pickup
PlayerInventory b armor
PlayerInventory b (LItemStack;)V setCarried
PlayerInventory c itemInHandIndex
PlayerInventory d (LItemStack;)I firstPartial
PlayerInventory d player
PlayerInventory h ()LItemStack; getItemInHand
PlayerInventory i ()I getHotbarSize
PlayerInventory j ()I getFirstEmptySlotIndex
PlayerInventory p ()LItemStack; getCarried
PlayerList a (DDDDILPacket;)V sendPacketNearby
PlayerList a (Lcom/mojang/authlib/GameProfile;)V addOp
PlayerList a (LEntityHuman;DDDDILPacket;)V sendPacketNearby
PlayerList a (LEntity;ILWorldServer;LWorldServer;)V changeWorld
PlayerList a (LEntityPlayer;I)V changeDimension
PlayerList a (LEntityPlayer;IZ)LEntityPlayer; moveToWorld
PlayerList a (LIChatBaseComponent;)V sendMessage
PlayerList a (LIChatBaseComponent;Z)V sendMessage
PlayerList a (Ljava/lang/String;)LEntityPlayer; getPlayer
PlayerList a (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; attemptLogin
PlayerList a (LPacket;)V sendAll
PlayerList a (LScoreboardServer;LEntityPlayer;)V sendScoreboard
PlayerList a ([LWorldServer;)V setPlayerFileData
PlayerList a ()V reloadWhitelist
PlayerList a (Z)V setHasWhitelist
PlayerList b (Lcom/mojang/authlib/GameProfile;)V removeOp
PlayerList b (LEntityPlayer;)V savePlayerFile
PlayerList c (Lcom/mojang/authlib/GameProfile;)V removeWhitelist
PlayerList c (LEntityPlayer;)V onPlayerJoin
PlayerList c ()Lnet/minecraft/server/MinecraftServer; getServer
PlayerList d (Lcom/mojang/authlib/GameProfile;)V addWhitelist
PlayerList e (Lcom/mojang/authlib/GameProfile;)Z isWhitelisted
PlayerList e (LEntityPlayer;)V disconnect
PlayerList e maxPlayers
PlayerList e ()V tick
PlayerList f (LEntityPlayer;)V updateClient
PlayerList g (Lcom/mojang/authlib/GameProfile;)LEntityPlayer; processLogin
PlayerList h (Lcom/mojang/authlib/GameProfile;)Z isOp
PlayerList h ()LGameProfileBanList; getProfileBans
PlayerList h server
PlayerList i ()LIpBanList; getIPBans
PlayerList i players
PlayerList j ()V savePlayers
PlayerList k ()LWhiteList; getWhitelist
PlayerList l ()[Ljava/lang/String; getWhitelisted
PlayerList m ()LOpList; getOPs
PlayerList m operators
PlayerList n whitelist
PlayerList o ()I getPlayerCount
PlayerList p ()I getMaxPlayers
PlayerList p playerFileData
PlayerList q hasWhitelist
PlayerList q ()[Ljava/lang/String; getSeenPlayers
PlayerList r ()Z getHasWhitelist
PlayerSelector a (LICommandListener;Ljava/lang/String;)LEntityPlayer; getPlayer
PlayerSelector a (LICommandListener;Ljava/lang/String;Ljava/lang/Class;)LEntity; getEntity
PlayerSelector a (Ljava/lang/String;)Z isList
PlayerSelector b (LICommandListener;Ljava/lang/String;)LIChatBaseComponent; getPlayerNames
PlayerSelector b (LICommandListener;Ljava/lang/String;Ljava/lang/Class;)Ljava/util/List; getPlayers
PlayerSelector b (Ljava/lang/String;)Z isPattern
PotionBrewer b (IZ)Ljava/util/List; getEffects
PotionBrewer o effectDurations
PotionBrewer p effectAmplifiers
PotionBrewer r appearances
PropertyManager a (Ljava/lang/String;I)I getInt
PropertyManager a (Ljava/lang/String;J)J getLong
PropertyManager a (Ljava/lang/String;Ljava/lang/Object;)V setProperty
PropertyManager a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; getString
PropertyManager a (Ljava/lang/String;Z)Z getBoolean
PropertyManager b properties
PropertyManager b ()V savePropertiesFile
PropertyManager c file
RecipesFurnace a (LBlock;LItemStack;F)V registerRecipe
RecipesFurnace a (LItemStack;)LItemStack; getResult
RecipesFurnace a ()LRecipesFurnace; getInstance
RecipesFurnace b ()Ljava/util/Map; getRecipes
RecipesFurnace b recipes
RegistryMaterials a (Ljava/lang/Object;)Ljava/lang/Object; get
RegistrySimple a (Ljava/lang/Object;)Ljava/lang/Object; get
RegistrySimple c ()Ljava/util/Set; keySet
RemoteControlCommandListener a instance
RemoteControlCommandListener h ()LRemoteControlCommandListener; getInstance
RemoteStatusListener$RemoteStatusChallenge b time
RemoteStatusListener$RemoteStatusChallenge c token
RemoteStatusListener$RemoteStatusChallenge d identity
RemoteStatusListener$RemoteStatusChallenge e response
RemoteStatusReply a buffer
RemoteStatusReply b stream
Scoreboard a (I)LScoreboardObjective; getObjectiveForSlot
Scoreboard a (ILScoreboardObjective;)V setDisplaySlot
Scoreboard a (LIScoreboardCriteria;)Ljava/util/Collection; getObjectivesForCriteria
Scoreboard a (Ljava/lang/String;LIScoreboardCriteria;)LScoreboardObjective; registerObjective
Scoreboard a (Ljava/lang/String;Ljava/lang/String;)Z addPlayerToTeam
Scoreboard a (Ljava/lang/String;LScoreboardTeam;)V removePlayerFromTeam
Scoreboard a (Ljava/lang/String;)V handlePlayerRemoved
Scoreboard a (LScoreboardObjective;)V handleObjectiveAdded
Scoreboard a (LScoreboardScore;)V handleScoreChanged
Scoreboard a (LScoreboardTeam;)V handleTeamAdded
Scoreboard a objectivesByName
ScoreboardBaseCriteria a (Ljava/util/List;)I getScoreModifier
ScoreboardBaseCriteria b ()Z isReadOnly
Scoreboard b (I)Ljava/lang/String; getSlotName
Scoreboard b (Ljava/lang/String;)LScoreboardObjective; getObjective
Scoreboard b (LScoreboardObjective;)V handleObjectiveChanged
Scoreboard b (LScoreboardTeam;)V handleTeamChanged
Scoreboard b objectivesByCriteria
Scoreboard c (Ljava/lang/String;)Ljava/util/Map; getPlayerObjectives
Scoreboard c (Ljava/lang/String;LScoreboardObjective;)LScoreboardScore; getPlayerScoreForObjective
Scoreboard c ()Ljava/util/Collection; getObjectives
Scoreboard c (LScoreboardObjective;)V handleObjectiveRemoved
Scoreboard c (LScoreboardTeam;)V handleTeamRemoved
Scoreboard c playerScores
Scoreboard d displaySlots
Scoreboard d (Ljava/lang/String;LScoreboardObjective;)V resetPlayerScores
Scoreboard d (Ljava/lang/String;)LScoreboardTeam; getTeam
Scoreboard d ()Ljava/util/Collection; getPlayers
Scoreboard d (LScoreboardTeam;)V removeTeam
Scoreboard e (Ljava/lang/String;)LScoreboardTeam; createTeam
Scoreboard e ()Ljava/util/Collection; getScores
Scoreboard e teamsByName
Scoreboard f (Ljava/lang/String;)Z removePlayerFromTeam
Scoreboard f ()Ljava/util/Collection; getTeamNames
Scoreboard f teamsByPlayer
Scoreboard g ()Ljava/util/Collection; getTeams
Scoreboard h (Ljava/lang/String;)LScoreboardTeam; getPlayerTeam
Scoreboard i (Ljava/lang/String;)I getSlotForName
Scoreboard i (LScoreboardObjective;)Ljava/util/Collection; getScoresForObjective
Scoreboard k (LScoreboardObjective;)V unregisterObjective
ScoreboardObjective a (Ljava/lang/String;)V setDisplayName
ScoreboardObjective b ()Ljava/lang/String; getName
ScoreboardObjective c ()LIScoreboardCriteria; getCriteria
ScoreboardObjective d ()Ljava/lang/String; getDisplayName
ScoreboardScore a (I)V addScore
ScoreboardScore a (Ljava/util/List;)V updateForList
ScoreboardScore a ()V incrementScore
ScoreboardScore b (I)V removeScore
ScoreboardScore c ()I getScore
ScoreboardScore c (I)V setScore
ScoreboardScore d ()LScoreboardObjective; getObjective
ScoreboardScore d playerName
ScoreboardScore e ()Ljava/lang/String; getPlayerName
ScoreboardScore e score
ScoreboardServer d (LScoreboardObjective;)Ljava/util/List; getScoreboardScorePacketsForObjective
ScoreboardTeam a (Ljava/lang/String;)V setDisplayName
ScoreboardTeam a (LScoreboardTeamBase$EnumNameTagVisibility;)V setNameTagVisibility
ScoreboardTeam a (LScoreboardTeamBase;Ljava/lang/String;)Ljava/lang/String; getPlayerDisplayName
ScoreboardTeam a (Z)V setAllowFriendlyFire
ScoreboardTeamBase a (LScoreboardTeamBase;)Z isAlly
ScoreboardTeamBase b ()Ljava/lang/String; getName
ScoreboardTeamBase d (Ljava/lang/String;)Ljava/lang/String; getFormattedName
ScoreboardTeamBase d ()Ljava/util/Collection; getPlayerNameSet
ScoreboardTeamBase$EnumNameTagVisibility a ALWAYS
ScoreboardTeamBase$EnumNameTagVisibility b NEVER
ScoreboardTeamBase$EnumNameTagVisibility c HIDE_FOR_OTHER_TEAMS
ScoreboardTeamBase$EnumNameTagVisibility d HIDE_FOR_OWN_TEAM
ScoreboardTeamBase g ()Z allowFriendlyFire
ScoreboardTeam b (Ljava/lang/String;)V setPrefix
ScoreboardTeam b (Z)V setCanSeeFriendlyInvisibles
ScoreboardTeam c ()Ljava/lang/String; getDisplayName
ScoreboardTeam c (Ljava/lang/String;)V setSuffix
ScoreboardTeam e ()Ljava/lang/String; getPrefix
ScoreboardTeam f ()Ljava/lang/String; getSuffix
ScoreboardTeam h ()Z canSeeFriendlyInvisibles
ScoreboardTeam i ()LScoreboardTeamBase$EnumNameTagVisibility; getNameTagVisibility
ScoreboardTeam k ()I packOptionData
ServerCommand a command
ServerCommand b source
ServerConnection g listeningChannels
ServerConnection h connectedChannels
ServerGUI a ()Ljavax/swing/JComponent; a
ServerGUI a (Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V a
ServerGUI b ()Ljavax/swing/JComponent; b
ServerGUI c ()Ljavax/swing/JComponent; c
ServerPing a (LIChatBaseComponent;)V setMOTD
ServerPing a (Ljava/lang/String;)V setFavicon
ServerPing a (LServerPing$ServerData;)V setServerInfo
ServerPing a (LServerPing$ServerPingPlayerSample;)V setPlayerSample
ServerStatisticManager b (LEntityPlayer;)V updateStatistics
ShapeDetectorBlock d ()LBlockPosition; getPosition
ShapedRecipes a width
ShapedRecipes b height
ShapedRecipes c items
ShapedRecipes d result
ShapelessRecipes a result
ShapelessRecipes b ingredients
SharedConstants a allowedCharacters
SharedConstants a (C)Z isAllowedChatCharacter
Slot a ()I getMaxStackSize
Slot a index
Slot a (LEntityHuman;)Z isAllowed
Slot a (LItemStack;)Z isAllowed
Slot b (LItemStack;)I getMaxStackSize
Slot d inventory
Slot d ()LItemStack; getItem
Slot d (LItemStack;)V set
Slot e rawSlotIndex
Slot e ()Z hasItem
SpawnerCreature a (LWorld;II)LBlockPosition; getRandomPosition
Statistic e name
StatisticList ab MINE_BLOCK_COUNT
StatisticList ac CRAFT_BLOCK_COUNT
StatisticList ad USE_ITEM_COUNT
StatisticList ae BREAK_ITEM_COUNT
StatisticList a (Ljava/lang/String;)LStatistic; getStatistic
StatisticList b stats
StatisticManager a (LAchievement;)Z hasAchievement
StatisticManager a (LEntityHuman;LStatistic;I)V setStatistic
StatisticManager a (LStatistic;)I getStatisticValue
StructureGenerator b (LWorld;LBlockPosition;)LBlockPosition; getNearestGeneratedFeature
TileEntityBanner a color
TileEntityBanner$EnumBannerPatternType a BASE
TileEntityBanner$EnumBannerPatternType A HALF_VERTICAL
TileEntityBanner$EnumBannerPatternType B HALF_HORIZONTAL
TileEntityBanner$EnumBannerPatternType b SQUARE_BOTTOM_LEFT
TileEntityBanner$EnumBannerPatternType C HALF_VERTICAL_MIRROR
TileEntityBanner$EnumBannerPatternType c SQUARE_BOTTOM_RIGHT
TileEntityBanner$EnumBannerPatternType D HALF_HORIZONTAL_MIRROR
TileEntityBanner$EnumBannerPatternType d SQUARE_TOP_LEFT
TileEntityBanner$EnumBannerPatternType E BORDER
TileEntityBanner$EnumBannerPatternType e SQUARE_TOP_RIGHT
TileEntityBanner$EnumBannerPatternType F CURLY_BORDER
TileEntityBanner$EnumBannerPatternType f STRIPE_BOTTOM
TileEntityBanner$EnumBannerPatternType G CREEPER
TileEntityBanner$EnumBannerPatternType g STRIPE_TOP
TileEntityBanner$EnumBannerPatternType H GRADIENT
TileEntityBanner$EnumBannerPatternType h STRIPE_LEFT
TileEntityBanner$EnumBannerPatternType I GRADIENT_UP
TileEntityBanner$EnumBannerPatternType i STRIPE_RIGHT
TileEntityBanner$EnumBannerPatternType J BRICKS
TileEntityBanner$EnumBannerPatternType j STRIPE_CENTER
TileEntityBanner$EnumBannerPatternType K SKULL
TileEntityBanner$EnumBannerPatternType k STRIPE_MIDDLE
TileEntityBanner$EnumBannerPatternType L FLOWER
TileEntityBanner$EnumBannerPatternType l STRIPE_DOWNRIGHT
TileEntityBanner$EnumBannerPatternType M MOJANG
TileEntityBanner$EnumBannerPatternType m STRIPE_DOWNLEFT
TileEntityBanner$EnumBannerPatternType n STRIPE_SMALL
TileEntityBanner$EnumBannerPatternType o CROSS
TileEntityBanner$EnumBannerPatternType p STRAIGHT_CROSS
TileEntityBanner$EnumBannerPatternType q TRIANGLE_BOTTOM
TileEntityBanner$EnumBannerPatternType r TRIANGLE_TOP
TileEntityBanner$EnumBannerPatternType s TRIANGLES_BOTTOM
TileEntityBanner$EnumBannerPatternType t TRIANGLES_TOP
TileEntityBanner$EnumBannerPatternType u DIAGONAL_LEFT
TileEntityBanner$EnumBannerPatternType v DIAGONAL_RIGHT
TileEntityBanner$EnumBannerPatternType w DIAGONAL_LEFT_MIRROR
TileEntityBanner$EnumBannerPatternType x DIAGONAL_RIGHT_MIRROR
TileEntityBanner$EnumBannerPatternType y CIRCLE_MIDDLE
TileEntityBanner$EnumBannerPatternType z RHOMBUS_MIDDLE
TileEntityBanner f patterns
TileEntityBeacon m inventorySlot
TileEntityBrewingStand g items
TileEntityBrewingStand h brewTime
TileEntity b world
TileEntityChest m items
TileEntityCommand b ()LCommandBlockListenerAbstract; getCommandBlock
TileEntity c position
TileEntityDispenser a (LItemStack;)I addItem
TileEntityDispenser e_ ()Ljava/lang/String; getName
TileEntityDispenser g items
TileEntityDispenser k ()Ljava/lang/String; getContainerName
TileEntityFurnace b (LItemStack;)I fuelTime
TileEntityFurnace c (LItemStack;)Z isFuel
TileEntityFurnace h items
TileEntityFurnace i burnTime
TileEntityFurnace j ticksForCurrentFuel
TileEntityFurnace k cookTime
TileEntityFurnace l cookTimeTotal
TileEntityFurnace m ()Z isBurning
TileEntityFurnace n ()V burn
TileEntityFurnace o ()Z canBurn
TileEntityHopper a items
TileEntityHopper a (LIInventory;LItemStack;LEnumDirection;)LItemStack; addItem
TileEntityHopper n ()Z isCooledDown
TileEntityMobSpawner b ()LMobSpawnerAbstract; getSpawner
TileEntityNote a (LWorld;LBlockPosition;)V play
TileEntityNote a note
TileEntity p_ ()V update
TileEntitySign a lines
TileEntitySign g isEditable
TileEntitySkull a (I)V setSkullType
TileEntitySkull a (Lcom/mojang/authlib/GameProfile;)V setGameProfile
TileEntitySkull b (I)V setRotation
TileEntitySkull b ()Lcom/mojang/authlib/GameProfile; getGameProfile
TileEntitySkull c ()I getSkullType
TileEntitySkull f rotation
TileEntity v ()LBlockPosition; getPosition
TileEntity y_ ()LPacket; getUpdatePacket
TileEntity z ()LWorld; getWorld
UserCache a (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; getProfile
Vec3D b (DDD)LVec3D; add
Vec3D g (LVec3D;)D distanceSquared
Vector3f a x
Vector3f b ()F getX
Vector3f b y
Vector3f c ()F getY
Vector3f c z
Vector3f d ()F getZ
WeightedRandomEnchant b enchantment
WeightedRandomEnchant c level
WhiteList a (Lcom/mojang/authlib/GameProfile;)Z isWhitelisted
World aa ()LEnumDifficulty; getDifficulty
World a (DDDD)LEntityHuman; findNearbyPlayer
World a (DDDLjava/lang/String;FF)V makeSound
World af ()LWorldBorder; getWorldBorder
World a (IIIIIIZ)Z isAreaLoaded
World a (II)LChunk; getChunkAt
World a (IIZ)Z isChunkLoaded
World a (LBlockPosition;I)Z areChunksLoaded
World a (LBlockPosition;IZ)Z areChunksLoaded
World a (LBlockPosition;LBlockPosition;)Z areChunksLoadedBetween
World a (LBlockPosition;LBlockPosition;Z)Z areChunksLoadedBetween
World a (LBlockPosition;LIBlockData;I)Z setTypeAndData
World a (LBlockPosition;LIBlockData;)Z setTypeUpdate
World a (LBlockPosition;LTileEntity;)V setTileEntity
World a (LBlockPosition;)Z isValidLocation
World a (LEntity;B)V broadcastEntityEffect
World a (LEntity;DDDFZ)LExplosion; explode
World a (LEntity;DDDFZZ)LExplosion; createExplosion
World a (LEntity;D)LEntityHuman; findNearbyPlayer
World a (LEntityHuman;LBlockPosition;LEnumDirection;)Z douseFire
World a (LEntity;LAxisAlignedBB;)Ljava/util/List; getCubes
World a (LEntity;Ljava/lang/String;FF)V makeSound
World a (LEntity;Z)V entityJoinedWorld
World a (LEnumParticle;DDDDDD[I)V addParticle
World a (LIWorldAccess;)V addIWorldAccess
World a (LVec3D;LVec3D;)LMovingObjectPosition; rayTrace
World a (LVec3D;LVec3D;Z)LMovingObjectPosition; rayTrace
World a (LVec3D;LVec3D;ZZZ)LMovingObjectPosition; rayTrace
World A villages
World a (ZZ)V setSpawnFlags
World b (DDDD)Z isPlayerNearby
World b (ILBlockPosition;I)V triggerEffect
World b (J)V setDayTime
World b (LBlockPosition;)LBiomeBase; getBiome
World b (LBlockPosition;LBlock;)V update
World b (LBlockPosition;LEnumDirection;)Z isBlockFacePowered
World b (LBlockPosition;Z)Z setAir
World b (LEntity;LAxisAlignedBB;)Ljava/util/List; getEntities
World B methodProfiler
WorldBorder a (DDJ)V transitionSizeBetween
WorldBorder a (D)V setSize
WorldBorder a (LChunkCoordIntPair;)Z isInBounds
WorldBorder a ()LEnumWorldBorderState; getState
WorldBorder b (D)V setDamageBuffer
WorldBorder b (I)V setWarningTime
WorldBorder c (DD)V setCenter
WorldBorder c (D)V setDamageAmount
WorldBorder c (I)V setWarningDistance
WorldBorder f ()D getCenterX
WorldBorder g ()D getCenterZ
WorldBorder h ()D getSize
WorldBorder m ()D getDamageBuffer
WorldBorder n ()D getDamageAmount
WorldBorder p ()I getWarningTime
WorldBorder q ()I getWarningDistance
WorldChunkManager a ([FIIII)[F getWetness
WorldChunkManager a ([LBiomeBase;IIII)[LBiomeBase; getBiomes
WorldChunkManager a (LBlockPosition;)LBiomeBase; getBiome
WorldChunkManager a (LBlockPosition;LBiomeBase;)LBiomeBase; getBiome
WorldChunkManager b ([LBiomeBase;IIII)[LBiomeBase; getBiomeBlock
World c (II)Z shouldStayLoaded
World c (LBlockPosition;LBlock;II)V playBlockAction
World c (LBlockPosition;LBlock;)V applyPhysics
World c (LBlockPosition;LEnumDirection;)I getBlockFacePower
World C (LBlockPosition;)Z isRainingAt
World c (LEntity;)Z strikeLightning
World C scoreboard
World c ()V doTick
WorldData a (LBlockPosition;)V setSpawn
WorldData a (LEnumDifficulty;)V setDifficulty
WorldData a (LWorldSettings$EnumGamemode;)V setGameType
WorldData a (Z)V setThundering
WorldData b ()J getSeed
WorldData b (J)V setTime
WorldData B ()Ljava/lang/String; getGeneratorOptions
WorldData b (Z)V setStorm
WorldData c (J)V setDayTime
WorldData f (I)V setThunderDuration
WorldData f ()J getTime
WorldData g (I)V setWeatherDuration
WorldData g ()J getDayTime
WorldData k ()Ljava/lang/String; getName
WorldData n ()Z isThundering
WorldData o ()I getThunderDuration
WorldData p ()Z hasStorm
WorldData q ()I getWeatherDuration
WorldData r ()LWorldSettings$EnumGamemode; getGameType
WorldData s ()Z shouldGenerateMapFeatures
WorldData t ()Z isHardcore
WorldData u ()LWorldType; getType
WorldData y ()LEnumDifficulty; getDifficulty
WorldData z ()Z isDifficultyLocked
World D isClientSide
World d (LAxisAlignedBB;)Z containsLiquid
World d (LEntity;)Z addEntity
World d ()V everyoneSleeping
World E chunkTickList
World e (LBlockPosition;LBlock;)V updateAdjacentComparators
World e (LBlockPosition;)Z isLoaded
World e (LEntity;)V kill
World F allowMonsters
World f entityList
World f (LBlockPosition;)LChunk; getChunkAtWorldCoords
World f (LEntity;)V removeEntity
World G allowAnimals
WorldGenerator b (LWorld;Ljava/util/Random;LBlockPosition;)Z generate
WorldGenFlatInfo a layers
WorldGenFlatInfo b structures
WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType a OPENING
WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType b WOOD_DOOR
WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType c GRATES
WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType d IRON_DOOR
WorldGenTrees b (LWorld;Ljava/util/Random;LBlockPosition;)Z generate
World g (LBlockPosition;)Z setAir
World h (LBlockPosition;)V notify
World i tileEntityList
World I ()V checkSession
World i ()V tickEntities
World J ()J getSeed
World j players
World K ()J getTime
World l entitiesById
World L ()J getDayTime
World l (LBlockPosition;)I getLightLevel
WorldManager b world
WorldMap a (II)V flagDirty
WorldMap b centerX
WorldMap c centerZ
WorldMap d map
WorldMap e scale
WorldMap f colors
WorldMap h decorations
WorldMap$WorldMapHumanTracker a trackee
WorldMap$WorldMapHumanTracker c worldMap
World M ()LBlockPosition; getSpawn
World m (LBlockPosition;)LBlockPosition; getHighestBlockYAt
WorldNBTStorage b baseDir
WorldNBTStorage c playerDir
WorldNBTStorage d dataDir
WorldNBTStorage e sessionId
World O ()LIDataManager; getDataManager
World P ()LWorldData; getWorldData
WorldProvider a (II)Z canSpawn
WorldProvider a (I)LWorldProvider; byDimension
WorldProvider c ()LIChunkProvider; getChunkProvider
WorldProvider g dimension
WorldProvider h type
WorldProvider i ()I getSeaLevel
WorldProvider k ()Ljava/lang/String; getName
WorldProvider l ()Ljava/lang/String; getSuffix
WorldProvider q ()I getDimension
WorldProvider r ()LWorldBorder; getWorldBorder
World Q ()LGameRules; getGameRules
WorldServer ah ()Z getSpawnNPCs
WorldServer a (IIIIII)Ljava/util/List; getTileEntities
WorldServer ai ()Z getSpawnAnimals
WorldServer a (Ljava/util/UUID;)LEntity; getEntity
WorldServer a (ZLIProgressUpdate;)V save
WorldServer b chunkProviderServer
WorldServer c savingDisabled
WorldServer d siegeManager
WorldServer f ()Z everyoneDeeplySleeping
WorldServer I server
WorldServer J tracker
WorldServer K manager
WorldServer m ()LBlockPosition; getDimensionSpawn
WorldServer N entitiesByUUID
WorldServer n ()V flushSave
WorldServer o ()V saveLevel
WorldServer P emptyTime
WorldServer r ()Lnet/minecraft/server/MinecraftServer; getMinecraftServer
WorldServer s ()LEntityTracker; getTracker
WorldServer t ()LPlayerChunkMap; getPlayerChunkMap
WorldServer u ()LPortalTravelAgent; getTravelAgent
WorldSettings a (Ljava/lang/String;)LWorldSettings; setGeneratorSettings
WorldSettings$EnumGamemode a ()I getId
WorldSettings$EnumGamemode a (I)LWorldSettings$EnumGamemode; getById
WorldSettings$EnumGamemode a NOT_SET
WorldSettings$EnumGamemode b SURVIVAL
WorldSettings$EnumGamemode c CREATIVE
WorldSettings$EnumGamemode d ADVENTURE
WorldSettings$EnumGamemode e SPECTATOR
World s random
World t worldProvider
WorldType a (Ljava/lang/String;)LWorldType; getType
WorldType a ()Ljava/lang/String; name
WorldType a types
WorldType b NORMAL
WorldType c FLAT
WorldType d ()I getVersion
WorldType d LARGE_BIOMES
WorldType e AMPLIFIED
WorldType f CUSTOMIZED
WorldType g DEBUG_ALL_BLOCK_STATES
WorldType h NORMAL_1_1
WorldType j name
WorldType k version
World U ()I getHeight
World v chunkProvider
World v ()LWorldChunkManager; getWorldChunkManager
World w dataManager
World x worldData
World y isLoading
World y (LBlockPosition;)I getBlockPower
World z (LBlockPosition;)Z isBlockIndirectlyPowered
World Z ()LScoreboard; getScoreboard
World z worldMaps
